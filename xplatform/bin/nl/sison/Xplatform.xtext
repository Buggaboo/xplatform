grammar nl.sison.Xplatform with org.eclipse.xtext.common.Terminals

generate xplatform "http://www.sison.nl/Xplatform"

Xplatform:
	'call' name=ID ':' method=RESTFUL_METHODS 'from' uri=URI
	('with' 'headers' 'from' 'request' requestHeaders=XplatformHeader
		('and' 'response' responseHeaders=XplatformHeader)?
	)?
	(
		'client' 'expects' jsonToClient=XplatformJson
		('server' 'expects' jsonToServer=XplatformJson)?
	)?
;

URI:
	(ANY_OTHER)+ ('{' uriParameter+=ID '}' (ANY_OTHER)*)?
;

XplatformHeader:
	"'''" 
	'{' (headerKeyValues+=XplatformHeaderKeyValuePair)
		(',' headerKeyValues+=XplatformHeaderKeyValuePair )* (',')? '}'
	"'''"
;

XplatformHeaderKeyValuePair:
	(key=STRING) '=' (value=STRING | value=XPLATFORM_HEADER_PARAMETER)	
;

terminal XPLATFORM_HEADER_PARAMETER:
	'{' ID '}'
;

terminal RESTFUL_METHODS:
	'PUT' | 'POST' | 'GET' | 'DELETE' // TODO HEAD will be automagically generated as well, a body-less response
;

XplatformJson:
	"'''" 
	type=JsonType | metaType=JsonMetaType | composite=JsonObject
	"'''"
;

terminal JSON_LITERAL_NULL: 'null';

terminal JSON_LITERAL_BOOLEAN:
	'true' | 'false'
;

JsonMetaScalarType:
	'boolean' | 'number' | 'string'
;

JsonMetaArray:
	'[' (metaType=JsonMetaType) ']'
;

JsonMetaType:
	scalar=JsonMetaScalarType | composite=JsonMetaArray
;

JsonCompositeType:
	composite=JsonArray
;

JsonType:
	scalar=JsonScalarType | composite=JsonCompositeType
;

JsonScalarType:
	bool=JSON_LITERAL_BOOLEAN | string=STRING | number=INT ('.' INT)? | null=JSON_LITERAL_NULL 
;

JsonArray:
	('[' (elements+=JsonScalarType) (',' elements+=JsonScalarType )* (',')? ']') |
	('[' (composites+=JsonCompositeType) (',' composites+=JsonCompositeType )* (',')? ']')
;

JsonObject:
	'{'
		(keys+=STRING ':' values+=XplatformJson)
		(','
			keys+=STRING ':' values+=XplatformJson
		)* (',')?
	'}'
;