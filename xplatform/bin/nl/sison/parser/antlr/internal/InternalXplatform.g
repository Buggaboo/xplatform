/*
* generated by Xtext
*/
grammar InternalXplatform;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package nl.sison.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package nl.sison.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import nl.sison.services.XplatformGrammarAccess;

}

@parser::members {

 	private XplatformGrammarAccess grammarAccess;
 	
    public InternalXplatformParser(TokenStream input, XplatformGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Xplatform";	
   	}
   	
   	@Override
   	protected XplatformGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleXplatform
entryRuleXplatform returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXplatformRule()); }
	 iv_ruleXplatform=ruleXplatform 
	 { $current=$iv_ruleXplatform.current; } 
	 EOF 
;

// Rule Xplatform
ruleXplatform returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformAccess().getPlatformPlatformParserRuleCall_0_0()); 
	    }
		lv_platform_0_0=rulePlatform		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformRule());
	        }
       		set(
       			$current, 
       			"platform",
        		lv_platform_0_0, 
        		"Platform");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformAccess().getResourcesXplatformResourceDefinitionParserRuleCall_1_0_0()); 
	    }
		lv_resources_1_0=ruleXplatformResourceDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_1_0, 
        		"XplatformResourceDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformAccess().getCallsXplatformCallDefinitionParserRuleCall_1_1_0()); 
	    }
		lv_calls_2_0=ruleXplatformCallDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformRule());
	        }
       		add(
       			$current, 
       			"calls",
        		lv_calls_2_0, 
        		"XplatformCallDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRulePlatform
entryRulePlatform returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlatformRule()); }
	 iv_rulePlatform=rulePlatform 
	 { $current=$iv_rulePlatform.current; } 
	 EOF 
;

// Rule Platform
rulePlatform returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='platform' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPlatformAccess().getPlatformKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPlatformAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		lv_platforms_2_0=RULE_ID
		{
			newLeafNode(lv_platforms_2_0, grammarAccess.getPlatformAccess().getPlatformsIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlatformRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"platforms",
        		lv_platforms_2_0, 
        		"ID");
	    }

)
)	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPlatformAccess().getHyphenMinusGreaterThanSignKeyword_2_1());
    }
(
(
		lv_generateWhere_4_0=RULE_STRING
		{
			newLeafNode(lv_generateWhere_4_0, grammarAccess.getPlatformAccess().getGenerateWhereSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPlatformRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"generateWhere",
        		lv_generateWhere_4_0, 
        		"STRING");
	    }

)
))+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPlatformAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXplatformCallDefinition
entryRuleXplatformCallDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXplatformCallDefinitionRule()); }
	 iv_ruleXplatformCallDefinition=ruleXplatformCallDefinition 
	 { $current=$iv_ruleXplatformCallDefinition.current; } 
	 EOF 
;

// Rule XplatformCallDefinition
ruleXplatformCallDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='call' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXplatformCallDefinitionAccess().getCallKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getXplatformCallDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXplatformCallDefinitionAccess().getColonKeyword_2());
    }
(
(
		lv_method_3_0=RULE_RESTFUL_METHODS
		{
			newLeafNode(lv_method_3_0, grammarAccess.getXplatformCallDefinitionAccess().getMethodRESTFUL_METHODSTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"method",
        		lv_method_3_0, 
        		"RESTFUL_METHODS");
	    }

)
)	otherlv_4='from' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXplatformCallDefinitionAccess().getFromKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformCallDefinitionAccess().getUriURIParserRuleCall_5_0()); 
	    }
		lv_uri_5_0=ruleURI		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		set(
       			$current, 
       			"uri",
        		lv_uri_5_0, 
        		"URI");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='with' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXplatformCallDefinitionAccess().getWithKeyword_6_0());
    }
	otherlv_7='headers' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXplatformCallDefinitionAccess().getHeadersKeyword_6_1());
    }
	otherlv_8='from' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXplatformCallDefinitionAccess().getFromKeyword_6_2());
    }
	otherlv_9='request' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXplatformCallDefinitionAccess().getRequestKeyword_6_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformCallDefinitionAccess().getRequestHeadersXplatformHeaderParserRuleCall_6_4_0()); 
	    }
		lv_requestHeaders_10_0=ruleXplatformHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		set(
       			$current, 
       			"requestHeaders",
        		lv_requestHeaders_10_0, 
        		"XplatformHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='and' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXplatformCallDefinitionAccess().getAndKeyword_6_5_0());
    }
	otherlv_12='response' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXplatformCallDefinitionAccess().getResponseKeyword_6_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformCallDefinitionAccess().getResponseHeadersXplatformHeaderParserRuleCall_6_5_2_0()); 
	    }
		lv_responseHeaders_13_0=ruleXplatformHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		set(
       			$current, 
       			"responseHeaders",
        		lv_responseHeaders_13_0, 
        		"XplatformHeader");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?(	otherlv_14='client' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getXplatformCallDefinitionAccess().getClientKeyword_7_0());
    }
	otherlv_15='expects' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXplatformCallDefinitionAccess().getExpectsKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformCallDefinitionAccess().getJsonToClientXplatformJsonParserRuleCall_7_2_0()); 
	    }
		lv_jsonToClient_16_0=ruleXplatformJson		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		set(
       			$current, 
       			"jsonToClient",
        		lv_jsonToClient_16_0, 
        		"XplatformJson");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17='server' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getXplatformCallDefinitionAccess().getServerKeyword_7_3_0());
    }
	otherlv_18='expects' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getXplatformCallDefinitionAccess().getExpectsKeyword_7_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformCallDefinitionAccess().getJsonToServerXplatformJsonParserRuleCall_7_3_2_0()); 
	    }
		lv_jsonToServer_19_0=ruleXplatformJson		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformCallDefinitionRule());
	        }
       		set(
       			$current, 
       			"jsonToServer",
        		lv_jsonToServer_19_0, 
        		"XplatformJson");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?)
;





// Entry rule entryRuleURI
entryRuleURI returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getURIRule()); }
	 iv_ruleURI=ruleURI 
	 { $current=$iv_ruleURI.current; } 
	 EOF 
;

// Rule URI
ruleURI returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_ANY_OTHER_0=RULE_ANY_OTHER
    { 
    newLeafNode(this_ANY_OTHER_0, grammarAccess.getURIAccess().getANY_OTHERTerminalRuleCall_0()); 
    }
)+(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getURIAccess().getLeftCurlyBracketKeyword_1_0());
    }
(
(
		lv_parameters_2_0=RULE_ID
		{
			newLeafNode(lv_parameters_2_0, grammarAccess.getURIAccess().getParametersIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURIRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"ID");
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getURIAccess().getRightCurlyBracketKeyword_1_2());
    }
(this_ANY_OTHER_4=RULE_ANY_OTHER
    { 
    newLeafNode(this_ANY_OTHER_4, grammarAccess.getURIAccess().getANY_OTHERTerminalRuleCall_1_3()); 
    }
)*)*)
;





// Entry rule entryRuleXplatformHeader
entryRuleXplatformHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXplatformHeaderRule()); }
	 iv_ruleXplatformHeader=ruleXplatformHeader 
	 { $current=$iv_ruleXplatformHeader.current; } 
	 EOF 
;

// Rule XplatformHeader
ruleXplatformHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getXplatformHeaderAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformHeaderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)?	otherlv_1='\'\'\'' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXplatformHeaderAccess().getApostropheApostropheApostropheKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXplatformHeaderAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformHeaderAccess().getHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_0()); 
	    }
		lv_headerKeyValues_3_0=ruleXplatformHeaderKeyValuePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformHeaderRule());
	        }
       		add(
       			$current, 
       			"headerKeyValues",
        		lv_headerKeyValues_3_0, 
        		"XplatformHeaderKeyValuePair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXplatformHeaderAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformHeaderAccess().getHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_4_1_0()); 
	    }
		lv_headerKeyValues_5_0=ruleXplatformHeaderKeyValuePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformHeaderRule());
	        }
       		add(
       			$current, 
       			"headerKeyValues",
        		lv_headerKeyValues_5_0, 
        		"XplatformHeaderKeyValuePair");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXplatformHeaderAccess().getCommaKeyword_5());
    }
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXplatformHeaderAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='\'\'\'' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXplatformHeaderAccess().getApostropheApostropheApostropheKeyword_7());
    }
)
;





// Entry rule entryRuleXplatformHeaderKeyValuePair
entryRuleXplatformHeaderKeyValuePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXplatformHeaderKeyValuePairRule()); }
	 iv_ruleXplatformHeaderKeyValuePair=ruleXplatformHeaderKeyValuePair 
	 { $current=$iv_ruleXplatformHeaderKeyValuePair.current; } 
	 EOF 
;

// Rule XplatformHeaderKeyValuePair
ruleXplatformHeaderKeyValuePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_STRING
		{
			newLeafNode(lv_key_0_0, grammarAccess.getXplatformHeaderKeyValuePairAccess().getKeySTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformHeaderKeyValuePairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"STRING");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXplatformHeaderKeyValuePairAccess().getEqualsSignKeyword_1());
    }
((
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getXplatformHeaderKeyValuePairAccess().getValueSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformHeaderKeyValuePairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_value_3_0=RULE_XPLATFORM_HEADER_PARAMETER
		{
			newLeafNode(lv_value_3_0, grammarAccess.getXplatformHeaderKeyValuePairAccess().getValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformHeaderKeyValuePairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XPLATFORM_HEADER_PARAMETER");
	    }

)
)))
;





// Entry rule entryRuleXplatformJson
entryRuleXplatformJson returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXplatformJsonRule()); }
	 iv_ruleXplatformJson=ruleXplatformJson 
	 { $current=$iv_ruleXplatformJson.current; } 
	 EOF 
;

// Rule XplatformJson
ruleXplatformJson returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getXplatformJsonAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXplatformJsonRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='\'\'\'' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXplatformJsonAccess().getApostropheApostropheApostropheKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformJsonAccess().getValueJsonObjectValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleJsonObjectValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformJsonRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"JsonObjectValue");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='\'\'\'' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXplatformJsonAccess().getApostropheApostropheApostropheKeyword_3());
    }
)
;





// Entry rule entryRuleJsonObjectValue
entryRuleJsonObjectValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonObjectValueRule()); }
	 iv_ruleJsonObjectValue=ruleJsonObjectValue 
	 { $current=$iv_ruleJsonObjectValue.current; } 
	 EOF 
;

// Rule JsonObjectValue
ruleJsonObjectValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getJsonObjectValueAccess().getValueSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJsonObjectValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getJsonObjectValueAccess().getJsonObjectParserRuleCall_1()); 
    }
    this_JsonObject_1=ruleJsonObject
    { 
        $current = $this_JsonObject_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJsonObjectValueAccess().getJsonArrayParserRuleCall_2()); 
    }
    this_JsonArray_2=ruleJsonArray
    { 
        $current = $this_JsonArray_2.current; 
        afterParserOrEnumRuleCall();
    }

    |this_EMPTY_JSON_OBJECT_3=RULE_EMPTY_JSON_OBJECT
    { 
    newLeafNode(this_EMPTY_JSON_OBJECT_3, grammarAccess.getJsonObjectValueAccess().getEMPTY_JSON_OBJECTTerminalRuleCall_3()); 
    }

    |this_EMPTY_JSON_ARRAY_4=RULE_EMPTY_JSON_ARRAY
    { 
    newLeafNode(this_EMPTY_JSON_ARRAY_4, grammarAccess.getJsonObjectValueAccess().getEMPTY_JSON_ARRAYTerminalRuleCall_4()); 
    }

    |this_JSON_LITERAL_BOOLEAN_5=RULE_JSON_LITERAL_BOOLEAN
    { 
    newLeafNode(this_JSON_LITERAL_BOOLEAN_5, grammarAccess.getJsonObjectValueAccess().getJSON_LITERAL_BOOLEANTerminalRuleCall_5()); 
    }

    |this_JSON_LITERAL_NULL_6=RULE_JSON_LITERAL_NULL
    { 
    newLeafNode(this_JSON_LITERAL_NULL_6, grammarAccess.getJsonObjectValueAccess().getJSON_LITERAL_NULLTerminalRuleCall_6()); 
    }

    |this_JSON_META_SCALAR_TYPE_7=RULE_JSON_META_SCALAR_TYPE
    { 
    newLeafNode(this_JSON_META_SCALAR_TYPE_7, grammarAccess.getJsonObjectValueAccess().getJSON_META_SCALAR_TYPETerminalRuleCall_7()); 
    }

    |this_JSON_NUMBER_8=RULE_JSON_NUMBER
    { 
    newLeafNode(this_JSON_NUMBER_8, grammarAccess.getJsonObjectValueAccess().getJSON_NUMBERTerminalRuleCall_8()); 
    }
)
;





// Entry rule entryRuleJsonObject
entryRuleJsonObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonObjectRule()); }
	 iv_ruleJsonObject=ruleJsonObject 
	 { $current=$iv_ruleJsonObject.current; } 
	 EOF 
;

// Rule JsonObject
ruleJsonObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonObjectAccess().getKeyValuePairJsonKeyValuePairParserRuleCall_1_0()); 
	    }
		lv_keyValuePair_1_0=ruleJsonKeyValuePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonObjectRule());
	        }
       		add(
       			$current, 
       			"keyValuePair",
        		lv_keyValuePair_1_0, 
        		"JsonKeyValuePair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonObjectAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonObjectAccess().getKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0()); 
	    }
		lv_keyValuePair_3_0=ruleJsonKeyValuePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonObjectRule());
	        }
       		add(
       			$current, 
       			"keyValuePair",
        		lv_keyValuePair_3_0, 
        		"JsonKeyValuePair");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonObjectAccess().getCommaKeyword_3());
    }
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJsonObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleJsonKeyValuePair
entryRuleJsonKeyValuePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonKeyValuePairRule()); }
	 iv_ruleJsonKeyValuePair=ruleJsonKeyValuePair 
	 { $current=$iv_ruleJsonKeyValuePair.current; } 
	 EOF 
;

// Rule JsonKeyValuePair
ruleJsonKeyValuePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_STRING
		{
			newLeafNode(lv_key_0_0, grammarAccess.getJsonKeyValuePairAccess().getKeySTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJsonKeyValuePairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJsonKeyValuePairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonKeyValuePairAccess().getValueJsonObjectValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleJsonObjectValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonKeyValuePairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"JsonObjectValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJsonArray
entryRuleJsonArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonArrayRule()); }
	 iv_ruleJsonArray=ruleJsonArray 
	 { $current=$iv_ruleJsonArray.current; } 
	 EOF 
;

// Rule JsonArray
ruleJsonArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonArrayAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonArrayAccess().getItemsJsonObjectValueParserRuleCall_1_0()); 
	    }
		lv_items_1_0=ruleJsonObjectValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonArrayRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_1_0, 
        		"JsonObjectValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonArrayAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonArrayAccess().getItemsJsonObjectValueParserRuleCall_2_1_0()); 
	    }
		lv_items_3_0=ruleJsonObjectValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonArrayRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_3_0, 
        		"JsonObjectValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonArrayAccess().getCommaKeyword_3());
    }
)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJsonArrayAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleXplatformResourceDefinition
entryRuleXplatformResourceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXplatformResourceDefinitionRule()); }
	 iv_ruleXplatformResourceDefinition=ruleXplatformResourceDefinition 
	 { $current=$iv_ruleXplatformResourceDefinition.current; } 
	 EOF 
;

// Rule XplatformResourceDefinition
ruleXplatformResourceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXplatformResourceDefinitionAccess().getResourcesMapInstanceParserRuleCall_0_0()); 
	    }
		lv_resources_0_0=ruleMapInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXplatformResourceDefinitionRule());
	        }
       		add(
       			$current, 
       			"resources",
        		lv_resources_0_0, 
        		"MapInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getXplatformResourceDefinitionAccess().getEnumInstanceParserRuleCall_1()); 
    }
    this_EnumInstance_1=ruleEnumInstance
    { 
        $current = $this_EnumInstance_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEnumInstance
entryRuleEnumInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumInstanceRule()); }
	 iv_ruleEnumInstance=ruleEnumInstance 
	 { $current=$iv_ruleEnumInstance.current; } 
	 EOF 
;

// Rule EnumInstance
ruleEnumInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumInstanceAccess().getEnumKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumInstanceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumInstanceAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		lv_values_3_0=RULE_ID
		{
			newLeafNode(lv_values_3_0, grammarAccess.getEnumInstanceAccess().getValuesIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumInstanceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumInstanceAccess().getCommaKeyword_4_0());
    }
(
(
		lv_values_5_0=RULE_ID
		{
			newLeafNode(lv_values_5_0, grammarAccess.getEnumInstanceAccess().getValuesIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumInstanceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"ID");
	    }

)
))*(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumInstanceAccess().getCommaKeyword_5());
    }
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumInstanceAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleMapInstance
entryRuleMapInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMapInstanceRule()); }
	 iv_ruleMapInstance=ruleMapInstance 
	 { $current=$iv_ruleMapInstance.current; } 
	 EOF 
;

// Rule MapInstance
ruleMapInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='map' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMapInstanceAccess().getMapKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMapInstanceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMapInstanceAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		lv_keys_3_0=RULE_ID
		{
			newLeafNode(lv_keys_3_0, grammarAccess.getMapInstanceAccess().getKeysIDTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapInstanceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"keys",
        		lv_keys_3_0, 
        		"ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMapInstanceAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapInstanceAccess().getValuesNestedTypeParserRuleCall_3_2_0()); 
	    }
		lv_values_5_0=ruleNestedType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapInstanceRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"NestedType");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMapInstanceAccess().getCommaKeyword_4_0());
    }
(
(
		lv_keys_7_0=RULE_ID
		{
			newLeafNode(lv_keys_7_0, grammarAccess.getMapInstanceAccess().getKeysIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMapInstanceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"keys",
        		lv_keys_7_0, 
        		"ID");
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMapInstanceAccess().getColonKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMapInstanceAccess().getValuesNestedTypeParserRuleCall_4_3_0()); 
	    }
		lv_values_9_0=ruleNestedType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMapInstanceRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_9_0, 
        		"NestedType");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMapInstanceAccess().getCommaKeyword_5());
    }
)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMapInstanceAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleStringList
entryRuleStringList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringListRule()); }
	 iv_ruleStringList=ruleStringList 
	 { $current=$iv_ruleStringList.current; } 
	 EOF 
;

// Rule StringList
ruleStringList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringListAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_values_1_0=RULE_STRING
		{
			newLeafNode(lv_values_1_0, grammarAccess.getStringListAccess().getValuesSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringListAccess().getCommaKeyword_2_0());
    }
(
(
		lv_values_3_0=RULE_STRING
		{
			newLeafNode(lv_values_3_0, grammarAccess.getStringListAccess().getValuesSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringListRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"STRING");
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStringListAccess().getCommaKeyword_3());
    }
)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringListAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleNestedType
entryRuleNestedType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedTypeRule()); }
	 iv_ruleNestedType=ruleNestedType 
	 { $current=$iv_ruleNestedType.current; } 
	 EOF 
;

// Rule NestedType
ruleNestedType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_STRING_0=RULE_STRING
    { 
    newLeafNode(this_STRING_0, grammarAccess.getNestedTypeAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getNestedTypeAccess().getStringListParserRuleCall_1()); 
    }
    this_StringList_1=ruleStringList
    { 
        $current = $this_StringList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





RULE_XPLATFORM_HEADER_PARAMETER : '{' RULE_ID '}';

RULE_RESTFUL_METHODS : ('PUT'|'POST'|'GET'|'DELETE');

RULE_JSON_META_SCALAR_TYPE : ('boolean'|'number'|'string');

RULE_EMPTY_JSON_OBJECT : '{}';

RULE_EMPTY_JSON_ARRAY : '[]';

RULE_JSON_LITERAL_NULL : 'null';

RULE_JSON_LITERAL_BOOLEAN : ('true'|'false');

RULE_JSON_NUMBER : ('0'|'1..9'+ RULE_INT) ('.' RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


