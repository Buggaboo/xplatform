/*
* generated by Xtext
*/

package nl.sison.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XplatformGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class XplatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Xplatform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPlatformAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPlatformPlatformParserRuleCall_0_0 = (RuleCall)cPlatformAssignment_0.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cResourcesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cResourcesXplatformResourceDefinitionParserRuleCall_1_0_0 = (RuleCall)cResourcesAssignment_1_0.eContents().get(0);
		private final Assignment cCallsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cCallsXplatformCallDefinitionParserRuleCall_1_1_0 = (RuleCall)cCallsAssignment_1_1.eContents().get(0);
		
		/// **
		// * 
		// * Xplatform http call generator parser
		// * 
		// * / Xplatform:
		//	platform=Platform (resources+=XplatformResourceDefinition | calls+=XplatformCallDefinition)+;
		public ParserRule getRule() { return rule; }

		//platform=Platform (resources+=XplatformResourceDefinition | calls+=XplatformCallDefinition)+
		public Group getGroup() { return cGroup; }

		//platform=Platform
		public Assignment getPlatformAssignment_0() { return cPlatformAssignment_0; }

		//Platform
		public RuleCall getPlatformPlatformParserRuleCall_0_0() { return cPlatformPlatformParserRuleCall_0_0; }

		//(resources+=XplatformResourceDefinition | calls+=XplatformCallDefinition)+
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//resources+=XplatformResourceDefinition
		public Assignment getResourcesAssignment_1_0() { return cResourcesAssignment_1_0; }

		//XplatformResourceDefinition
		public RuleCall getResourcesXplatformResourceDefinitionParserRuleCall_1_0_0() { return cResourcesXplatformResourceDefinitionParserRuleCall_1_0_0; }

		//calls+=XplatformCallDefinition
		public Assignment getCallsAssignment_1_1() { return cCallsAssignment_1_1; }

		//XplatformCallDefinition
		public RuleCall getCallsXplatformCallDefinitionParserRuleCall_1_1_0() { return cCallsXplatformCallDefinitionParserRuleCall_1_1_0; }
	}

	public class PlatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Platform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlatformKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cPlatformsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cPlatformsIDTerminalRuleCall_2_0_0 = (RuleCall)cPlatformsAssignment_2_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cGenerateWhereAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cGenerateWhereSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cGenerateWhereAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Platform:
		//	"platform" "{" (platforms+=ID "->" generateWhere+=STRING)+ "}";
		public ParserRule getRule() { return rule; }

		//"platform" "{" (platforms+=ID "->" generateWhere+=STRING)+ "}"
		public Group getGroup() { return cGroup; }

		//"platform"
		public Keyword getPlatformKeyword_0() { return cPlatformKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(platforms+=ID "->" generateWhere+=STRING)+
		public Group getGroup_2() { return cGroup_2; }

		//platforms+=ID
		public Assignment getPlatformsAssignment_2_0() { return cPlatformsAssignment_2_0; }

		//ID
		public RuleCall getPlatformsIDTerminalRuleCall_2_0_0() { return cPlatformsIDTerminalRuleCall_2_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2_1() { return cHyphenMinusGreaterThanSignKeyword_2_1; }

		//generateWhere+=STRING
		public Assignment getGenerateWhereAssignment_2_2() { return cGenerateWhereAssignment_2_2; }

		//STRING
		public RuleCall getGenerateWhereSTRINGTerminalRuleCall_2_2_0() { return cGenerateWhereSTRINGTerminalRuleCall_2_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class XplatformCallDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformCallDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMethodAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMethodRESTFUL_METHODSTerminalRuleCall_3_0 = (RuleCall)cMethodAssignment_3.eContents().get(0);
		private final Keyword cFromKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cUriAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUriURIParserRuleCall_5_0 = (RuleCall)cUriAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cWithKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cHeadersKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cFromKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cRequestKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cRequestHeadersAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final RuleCall cRequestHeadersXplatformHeaderParserRuleCall_6_4_0 = (RuleCall)cRequestHeadersAssignment_6_4.eContents().get(0);
		private final Group cGroup_6_5 = (Group)cGroup_6.eContents().get(5);
		private final Keyword cAndKeyword_6_5_0 = (Keyword)cGroup_6_5.eContents().get(0);
		private final Keyword cResponseKeyword_6_5_1 = (Keyword)cGroup_6_5.eContents().get(1);
		private final Assignment cResponseHeadersAssignment_6_5_2 = (Assignment)cGroup_6_5.eContents().get(2);
		private final RuleCall cResponseHeadersXplatformHeaderParserRuleCall_6_5_2_0 = (RuleCall)cResponseHeadersAssignment_6_5_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cClientKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cExpectsKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cJsonToClientAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cJsonToClientXplatformJsonParserRuleCall_7_2_0 = (RuleCall)cJsonToClientAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cServerKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Keyword cExpectsKeyword_7_3_1 = (Keyword)cGroup_7_3.eContents().get(1);
		private final Assignment cJsonToServerAssignment_7_3_2 = (Assignment)cGroup_7_3.eContents().get(2);
		private final RuleCall cJsonToServerXplatformJsonParserRuleCall_7_3_2_0 = (RuleCall)cJsonToServerAssignment_7_3_2.eContents().get(0);
		
		//XplatformCallDefinition:
		//	"call" name=ID ":" method=RESTFUL_METHODS "from" uri=URI ("with" "headers" "from" "request"
		//	requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)? ("client" "expects"
		//	jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?;
		public ParserRule getRule() { return rule; }

		//"call" name=ID ":" method=RESTFUL_METHODS "from" uri=URI ("with" "headers" "from" "request"
		//requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)? ("client" "expects"
		//jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?
		public Group getGroup() { return cGroup; }

		//"call"
		public Keyword getCallKeyword_0() { return cCallKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//method=RESTFUL_METHODS
		public Assignment getMethodAssignment_3() { return cMethodAssignment_3; }

		//RESTFUL_METHODS
		public RuleCall getMethodRESTFUL_METHODSTerminalRuleCall_3_0() { return cMethodRESTFUL_METHODSTerminalRuleCall_3_0; }

		//"from"
		public Keyword getFromKeyword_4() { return cFromKeyword_4; }

		//uri=URI
		public Assignment getUriAssignment_5() { return cUriAssignment_5; }

		//URI
		public RuleCall getUriURIParserRuleCall_5_0() { return cUriURIParserRuleCall_5_0; }

		//("with" "headers" "from" "request" requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)?
		public Group getGroup_6() { return cGroup_6; }

		//"with"
		public Keyword getWithKeyword_6_0() { return cWithKeyword_6_0; }

		//"headers"
		public Keyword getHeadersKeyword_6_1() { return cHeadersKeyword_6_1; }

		//"from"
		public Keyword getFromKeyword_6_2() { return cFromKeyword_6_2; }

		//"request"
		public Keyword getRequestKeyword_6_3() { return cRequestKeyword_6_3; }

		//requestHeaders=XplatformHeader
		public Assignment getRequestHeadersAssignment_6_4() { return cRequestHeadersAssignment_6_4; }

		//XplatformHeader
		public RuleCall getRequestHeadersXplatformHeaderParserRuleCall_6_4_0() { return cRequestHeadersXplatformHeaderParserRuleCall_6_4_0; }

		//("and" "response" responseHeaders=XplatformHeader)?
		public Group getGroup_6_5() { return cGroup_6_5; }

		//"and"
		public Keyword getAndKeyword_6_5_0() { return cAndKeyword_6_5_0; }

		//"response"
		public Keyword getResponseKeyword_6_5_1() { return cResponseKeyword_6_5_1; }

		//responseHeaders=XplatformHeader
		public Assignment getResponseHeadersAssignment_6_5_2() { return cResponseHeadersAssignment_6_5_2; }

		//XplatformHeader
		public RuleCall getResponseHeadersXplatformHeaderParserRuleCall_6_5_2_0() { return cResponseHeadersXplatformHeaderParserRuleCall_6_5_2_0; }

		//("client" "expects" jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?
		public Group getGroup_7() { return cGroup_7; }

		//"client"
		public Keyword getClientKeyword_7_0() { return cClientKeyword_7_0; }

		//"expects"
		public Keyword getExpectsKeyword_7_1() { return cExpectsKeyword_7_1; }

		//jsonToClient=XplatformJson
		public Assignment getJsonToClientAssignment_7_2() { return cJsonToClientAssignment_7_2; }

		//XplatformJson
		public RuleCall getJsonToClientXplatformJsonParserRuleCall_7_2_0() { return cJsonToClientXplatformJsonParserRuleCall_7_2_0; }

		//("server" "expects" jsonToServer=XplatformJson)?
		public Group getGroup_7_3() { return cGroup_7_3; }

		//"server"
		public Keyword getServerKeyword_7_3_0() { return cServerKeyword_7_3_0; }

		//"expects"
		public Keyword getExpectsKeyword_7_3_1() { return cExpectsKeyword_7_3_1; }

		//jsonToServer=XplatformJson
		public Assignment getJsonToServerAssignment_7_3_2() { return cJsonToServerAssignment_7_3_2; }

		//XplatformJson
		public RuleCall getJsonToServerXplatformJsonParserRuleCall_7_3_2_0() { return cJsonToServerXplatformJsonParserRuleCall_7_3_2_0; }
	}

	public class URIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cANY_OTHERTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParametersAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cParametersIDTerminalRuleCall_1_1_0 = (RuleCall)cParametersAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//URI:
		//	ANY_OTHER+ ("{" parameters+=ID "}" ANY_OTHER*)*;
		public ParserRule getRule() { return rule; }

		//ANY_OTHER+ ("{" parameters+=ID "}" ANY_OTHER*)*
		public Group getGroup() { return cGroup; }

		//ANY_OTHER+
		public RuleCall getANY_OTHERTerminalRuleCall_0() { return cANY_OTHERTerminalRuleCall_0; }

		//("{" parameters+=ID "}" ANY_OTHER*)*
		public Group getGroup_1() { return cGroup_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//parameters+=ID
		public Assignment getParametersAssignment_1_1() { return cParametersAssignment_1_1; }

		//ID
		public RuleCall getParametersIDTerminalRuleCall_1_1_0() { return cParametersIDTerminalRuleCall_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }

		//ANY_OTHER*
		public RuleCall getANY_OTHERTerminalRuleCall_1_3() { return cANY_OTHERTerminalRuleCall_1_3; }
	}

	public class XplatformHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cHeaderKeyValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_0 = (RuleCall)cHeaderKeyValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cHeaderKeyValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_4_1_0 = (RuleCall)cHeaderKeyValuesAssignment_4_1.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cApostropheApostropheApostropheKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//XplatformHeader:
		//	name=ID? "\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValuePair ("," headerKeyValues+=XplatformHeaderKeyValuePair)*
		//	","? "}" "\'\'\'";
		public ParserRule getRule() { return rule; }

		//name=ID? "\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValuePair ("," headerKeyValues+=XplatformHeaderKeyValuePair)*
		//","? "}" "\'\'\'"
		public Group getGroup() { return cGroup; }

		//name=ID?
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_1() { return cApostropheApostropheApostropheKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//headerKeyValues+=XplatformHeaderKeyValuePair
		public Assignment getHeaderKeyValuesAssignment_3() { return cHeaderKeyValuesAssignment_3; }

		//XplatformHeaderKeyValuePair
		public RuleCall getHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_0() { return cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_0; }

		//("," headerKeyValues+=XplatformHeaderKeyValuePair)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//headerKeyValues+=XplatformHeaderKeyValuePair
		public Assignment getHeaderKeyValuesAssignment_4_1() { return cHeaderKeyValuesAssignment_4_1; }

		//XplatformHeaderKeyValuePair
		public RuleCall getHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_4_1_0() { return cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_4_1_0; }

		//","?
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_7() { return cApostropheApostropheApostropheKeyword_7; }
	}

	public class XplatformHeaderKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformHeaderKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		
		//XplatformHeaderKeyValuePair:
		//	key=STRING "=" (value=STRING | value=XPLATFORM_HEADER_PARAMETER);
		public ParserRule getRule() { return rule; }

		//key=STRING "=" (value=STRING | value=XPLATFORM_HEADER_PARAMETER)
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING | value=XPLATFORM_HEADER_PARAMETER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//value=STRING
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0_0() { return cValueSTRINGTerminalRuleCall_2_0_0; }

		//value=XPLATFORM_HEADER_PARAMETER
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }

		//XPLATFORM_HEADER_PARAMETER
		public RuleCall getValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0() { return cValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0; }
	}

	public class XplatformJsonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformJson");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonObjectValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//XplatformJson:
		//	name=ID "\'\'\'" value=JsonObjectValue "\'\'\'";
		public ParserRule getRule() { return rule; }

		//name=ID "\'\'\'" value=JsonObjectValue "\'\'\'"
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_1() { return cApostropheApostropheApostropheKeyword_1; }

		//value=JsonObjectValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//JsonObjectValue
		public RuleCall getValueJsonObjectValueParserRuleCall_2_0() { return cValueJsonObjectValueParserRuleCall_2_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_3() { return cApostropheApostropheApostropheKeyword_3; }
	}

	public class JsonObjectValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonObjectValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final RuleCall cJsonObjectParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonArrayParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEMPTY_JSON_OBJECTTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEMPTY_JSON_ARRAYTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cJSON_LITERAL_BOOLEANTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cJSON_LITERAL_NULLTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cJSON_META_SCALAR_TYPETerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cJSON_NUMBERTerminalRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		/// *
		//
		//
		//JsonMetaType:
		//	scalar=JsonMetaScalarType | composite=JsonMetaArray
		//;
		//
		//JsonCompositeType:
		//	composite=JsonArray
		//;
		//
		//JsonType:
		//	scalar=JsonScalarType | composite=JsonCompositeType
		//;
		//
		//JsonScalarType:
		//	bool=JSON_LITERAL_BOOLEAN | string=STRING | number= | null=JSON_LITERAL_NULL 
		//;
		//
		//JsonArray:
		//	('[' (elements+=JsonScalarType) (',' elements+=JsonScalarType )* (',')? ']') |
		//	('[' (composites+=JsonCompositeType) (',' composites+=JsonCompositeType )* (',')? ']')
		//;
		//
		//JsonObject:
		//	'{'
		//		(keys+=STRING ':' values+=XplatformJson)
		//		(','
		//			keys+=STRING ':' values+=XplatformJson
		//		)* (',')?
		//	'}'
		//;
		// * / // Borrowed from http://www.ebpml.org/blog2/index.php/2010/11/05/mde-xtext-and-json
		//JsonObjectValue:
		//	value=STRING | JsonObject | JsonArray | EMPTY_JSON_OBJECT | EMPTY_JSON_ARRAY | JSON_LITERAL_BOOLEAN |
		//	JSON_LITERAL_NULL | JSON_META_SCALAR_TYPE | JSON_NUMBER;
		public ParserRule getRule() { return rule; }

		//value=STRING | JsonObject | JsonArray | EMPTY_JSON_OBJECT | EMPTY_JSON_ARRAY | JSON_LITERAL_BOOLEAN | JSON_LITERAL_NULL
		//| JSON_META_SCALAR_TYPE | JSON_NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//value=STRING
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0_0() { return cValueSTRINGTerminalRuleCall_0_0; }

		//JsonObject
		public RuleCall getJsonObjectParserRuleCall_1() { return cJsonObjectParserRuleCall_1; }

		//JsonArray
		public RuleCall getJsonArrayParserRuleCall_2() { return cJsonArrayParserRuleCall_2; }

		//EMPTY_JSON_OBJECT
		public RuleCall getEMPTY_JSON_OBJECTTerminalRuleCall_3() { return cEMPTY_JSON_OBJECTTerminalRuleCall_3; }

		//EMPTY_JSON_ARRAY
		public RuleCall getEMPTY_JSON_ARRAYTerminalRuleCall_4() { return cEMPTY_JSON_ARRAYTerminalRuleCall_4; }

		//JSON_LITERAL_BOOLEAN
		public RuleCall getJSON_LITERAL_BOOLEANTerminalRuleCall_5() { return cJSON_LITERAL_BOOLEANTerminalRuleCall_5; }

		//JSON_LITERAL_NULL
		public RuleCall getJSON_LITERAL_NULLTerminalRuleCall_6() { return cJSON_LITERAL_NULLTerminalRuleCall_6; }

		//JSON_META_SCALAR_TYPE
		public RuleCall getJSON_META_SCALAR_TYPETerminalRuleCall_7() { return cJSON_META_SCALAR_TYPETerminalRuleCall_7; }

		//JSON_NUMBER
		public RuleCall getJSON_NUMBERTerminalRuleCall_8() { return cJSON_NUMBERTerminalRuleCall_8; }
	}

	public class JsonObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKeyValuePairAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyValuePairJsonKeyValuePairParserRuleCall_1_0 = (RuleCall)cKeyValuePairAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cKeyValuePairAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0 = (RuleCall)cKeyValuePairAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonObject:
		//	"{" keyValuePair+=JsonKeyValuePair ("," keyValuePair+=JsonKeyValuePair)* ","? "}";
		public ParserRule getRule() { return rule; }

		//"{" keyValuePair+=JsonKeyValuePair ("," keyValuePair+=JsonKeyValuePair)* ","? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//keyValuePair+=JsonKeyValuePair
		public Assignment getKeyValuePairAssignment_1() { return cKeyValuePairAssignment_1; }

		//JsonKeyValuePair
		public RuleCall getKeyValuePairJsonKeyValuePairParserRuleCall_1_0() { return cKeyValuePairJsonKeyValuePairParserRuleCall_1_0; }

		//("," keyValuePair+=JsonKeyValuePair)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//keyValuePair+=JsonKeyValuePair
		public Assignment getKeyValuePairAssignment_2_1() { return cKeyValuePairAssignment_2_1; }

		//JsonKeyValuePair
		public RuleCall getKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0() { return cKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0; }

		//","?
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class JsonKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonObjectValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonKeyValuePair:
		//	key=STRING ":" value=JsonObjectValue;
		public ParserRule getRule() { return rule; }

		//key=STRING ":" value=JsonObjectValue
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=JsonObjectValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//JsonObjectValue
		public RuleCall getValueJsonObjectValueParserRuleCall_2_0() { return cValueJsonObjectValueParserRuleCall_2_0; }
	}

	public class JsonArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cItemsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cItemsJsonObjectValueParserRuleCall_1_0 = (RuleCall)cItemsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cItemsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cItemsJsonObjectValueParserRuleCall_2_1_0 = (RuleCall)cItemsAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonArray:
		//	"[" items+=JsonObjectValue ("," items+=JsonObjectValue)* ","? "]";
		public ParserRule getRule() { return rule; }

		//"[" items+=JsonObjectValue ("," items+=JsonObjectValue)* ","? "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//items+=JsonObjectValue
		public Assignment getItemsAssignment_1() { return cItemsAssignment_1; }

		//JsonObjectValue
		public RuleCall getItemsJsonObjectValueParserRuleCall_1_0() { return cItemsJsonObjectValueParserRuleCall_1_0; }

		//("," items+=JsonObjectValue)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//items+=JsonObjectValue
		public Assignment getItemsAssignment_2_1() { return cItemsAssignment_2_1; }

		//JsonObjectValue
		public RuleCall getItemsJsonObjectValueParserRuleCall_2_1_0() { return cItemsJsonObjectValueParserRuleCall_2_1_0; }

		//","?
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class XplatformResourceDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformResourceDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cResourcesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cResourcesMapInstanceParserRuleCall_0_0 = (RuleCall)cResourcesAssignment_0.eContents().get(0);
		private final RuleCall cEnumInstanceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		/// **
		// * 
		// * Xplatform resource generator
		// * 
		// * / XplatformResourceDefinition:
		//	resources+=MapInstance | EnumInstance;
		public ParserRule getRule() { return rule; }

		//resources+=MapInstance | EnumInstance
		public Alternatives getAlternatives() { return cAlternatives; }

		//resources+=MapInstance
		public Assignment getResourcesAssignment_0() { return cResourcesAssignment_0; }

		//MapInstance
		public RuleCall getResourcesMapInstanceParserRuleCall_0_0() { return cResourcesMapInstanceParserRuleCall_0_0; }

		//EnumInstance
		public RuleCall getEnumInstanceParserRuleCall_1() { return cEnumInstanceParserRuleCall_1; }
	}

	public class EnumInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValuesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValuesIDTerminalRuleCall_3_0 = (RuleCall)cValuesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValuesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValuesIDTerminalRuleCall_4_1_0 = (RuleCall)cValuesAssignment_4_1.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EnumInstance:
		//	"enum" name=ID "{" values+=ID ("," values+=ID)* ","? "}";
		public ParserRule getRule() { return rule; }

		//"enum" name=ID "{" values+=ID ("," values+=ID)* ","? "}"
		public Group getGroup() { return cGroup; }

		//"enum"
		public Keyword getEnumKeyword_0() { return cEnumKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//values+=ID
		public Assignment getValuesAssignment_3() { return cValuesAssignment_3; }

		//ID
		public RuleCall getValuesIDTerminalRuleCall_3_0() { return cValuesIDTerminalRuleCall_3_0; }

		//("," values+=ID)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//values+=ID
		public Assignment getValuesAssignment_4_1() { return cValuesAssignment_4_1; }

		//ID
		public RuleCall getValuesIDTerminalRuleCall_4_1_0() { return cValuesIDTerminalRuleCall_4_1_0; }

		//","?
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class MapInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MapInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cKeysAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cKeysIDTerminalRuleCall_3_0_0 = (RuleCall)cKeysAssignment_3_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cValuesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cValuesNestedTypeParserRuleCall_3_2_0 = (RuleCall)cValuesAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cKeysAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cKeysIDTerminalRuleCall_4_1_0 = (RuleCall)cKeysAssignment_4_1.eContents().get(0);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cValuesAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cValuesNestedTypeParserRuleCall_4_3_0 = (RuleCall)cValuesAssignment_4_3.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MapInstance:
		//	"map" name=ID "{" (keys+=ID ":" values+=NestedType) ("," keys+=ID ":" values+=NestedType)* ","? // you must have at least one map
		//	"}";
		public ParserRule getRule() { return rule; }

		//"map" name=ID "{" (keys+=ID ":" values+=NestedType) ("," keys+=ID ":" values+=NestedType)* ","? // you must have at least one map
		//"}"
		public Group getGroup() { return cGroup; }

		//"map"
		public Keyword getMapKeyword_0() { return cMapKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//keys+=ID ":" values+=NestedType
		public Group getGroup_3() { return cGroup_3; }

		//keys+=ID
		public Assignment getKeysAssignment_3_0() { return cKeysAssignment_3_0; }

		//ID
		public RuleCall getKeysIDTerminalRuleCall_3_0_0() { return cKeysIDTerminalRuleCall_3_0_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//values+=NestedType
		public Assignment getValuesAssignment_3_2() { return cValuesAssignment_3_2; }

		//NestedType
		public RuleCall getValuesNestedTypeParserRuleCall_3_2_0() { return cValuesNestedTypeParserRuleCall_3_2_0; }

		//("," keys+=ID ":" values+=NestedType)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//keys+=ID
		public Assignment getKeysAssignment_4_1() { return cKeysAssignment_4_1; }

		//ID
		public RuleCall getKeysIDTerminalRuleCall_4_1_0() { return cKeysIDTerminalRuleCall_4_1_0; }

		//":"
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }

		//values+=NestedType
		public Assignment getValuesAssignment_4_3() { return cValuesAssignment_4_3; }

		//NestedType
		public RuleCall getValuesNestedTypeParserRuleCall_4_3_0() { return cValuesNestedTypeParserRuleCall_4_3_0; }

		//","?
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//// you must have at least one map
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class StringListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValuesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_1_0 = (RuleCall)cValuesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//StringList:
		//	"[" values+=STRING ("," values+=STRING)* ","? "]";
		public ParserRule getRule() { return rule; }

		//"[" values+=STRING ("," values+=STRING)* ","? "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//values+=STRING
		public Assignment getValuesAssignment_1() { return cValuesAssignment_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_1_0() { return cValuesSTRINGTerminalRuleCall_1_0; }

		//("," values+=STRING)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//values+=STRING
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }

		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_2_1_0() { return cValuesSTRINGTerminalRuleCall_2_1_0; }

		//","?
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class NestedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringListParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NestedType:
		//	STRING | StringList;
		public ParserRule getRule() { return rule; }

		//STRING | StringList
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//StringList
		public RuleCall getStringListParserRuleCall_1() { return cStringListParserRuleCall_1; }
	}
	
	
	private XplatformElements pXplatform;
	private PlatformElements pPlatform;
	private XplatformCallDefinitionElements pXplatformCallDefinition;
	private URIElements pURI;
	private XplatformHeaderElements pXplatformHeader;
	private XplatformHeaderKeyValuePairElements pXplatformHeaderKeyValuePair;
	private TerminalRule tXPLATFORM_HEADER_PARAMETER;
	private TerminalRule tRESTFUL_METHODS;
	private XplatformJsonElements pXplatformJson;
	private JsonObjectValueElements pJsonObjectValue;
	private JsonObjectElements pJsonObject;
	private JsonKeyValuePairElements pJsonKeyValuePair;
	private JsonArrayElements pJsonArray;
	private TerminalRule tJSON_META_SCALAR_TYPE;
	private TerminalRule tEMPTY_JSON_OBJECT;
	private TerminalRule tEMPTY_JSON_ARRAY;
	private TerminalRule tJSON_LITERAL_NULL;
	private TerminalRule tJSON_LITERAL_BOOLEAN;
	private TerminalRule tJSON_NUMBER;
	private XplatformResourceDefinitionElements pXplatformResourceDefinition;
	private EnumInstanceElements pEnumInstance;
	private MapInstanceElements pMapInstance;
	private StringListElements pStringList;
	private NestedTypeElements pNestedType;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XplatformGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("nl.sison.Xplatform".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	/// **
	// * 
	// * Xplatform http call generator parser
	// * 
	// * / Xplatform:
	//	platform=Platform (resources+=XplatformResourceDefinition | calls+=XplatformCallDefinition)+;
	public XplatformElements getXplatformAccess() {
		return (pXplatform != null) ? pXplatform : (pXplatform = new XplatformElements());
	}
	
	public ParserRule getXplatformRule() {
		return getXplatformAccess().getRule();
	}

	//Platform:
	//	"platform" "{" (platforms+=ID "->" generateWhere+=STRING)+ "}";
	public PlatformElements getPlatformAccess() {
		return (pPlatform != null) ? pPlatform : (pPlatform = new PlatformElements());
	}
	
	public ParserRule getPlatformRule() {
		return getPlatformAccess().getRule();
	}

	//XplatformCallDefinition:
	//	"call" name=ID ":" method=RESTFUL_METHODS "from" uri=URI ("with" "headers" "from" "request"
	//	requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)? ("client" "expects"
	//	jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?;
	public XplatformCallDefinitionElements getXplatformCallDefinitionAccess() {
		return (pXplatformCallDefinition != null) ? pXplatformCallDefinition : (pXplatformCallDefinition = new XplatformCallDefinitionElements());
	}
	
	public ParserRule getXplatformCallDefinitionRule() {
		return getXplatformCallDefinitionAccess().getRule();
	}

	//URI:
	//	ANY_OTHER+ ("{" parameters+=ID "}" ANY_OTHER*)*;
	public URIElements getURIAccess() {
		return (pURI != null) ? pURI : (pURI = new URIElements());
	}
	
	public ParserRule getURIRule() {
		return getURIAccess().getRule();
	}

	//XplatformHeader:
	//	name=ID? "\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValuePair ("," headerKeyValues+=XplatformHeaderKeyValuePair)*
	//	","? "}" "\'\'\'";
	public XplatformHeaderElements getXplatformHeaderAccess() {
		return (pXplatformHeader != null) ? pXplatformHeader : (pXplatformHeader = new XplatformHeaderElements());
	}
	
	public ParserRule getXplatformHeaderRule() {
		return getXplatformHeaderAccess().getRule();
	}

	//XplatformHeaderKeyValuePair:
	//	key=STRING "=" (value=STRING | value=XPLATFORM_HEADER_PARAMETER);
	public XplatformHeaderKeyValuePairElements getXplatformHeaderKeyValuePairAccess() {
		return (pXplatformHeaderKeyValuePair != null) ? pXplatformHeaderKeyValuePair : (pXplatformHeaderKeyValuePair = new XplatformHeaderKeyValuePairElements());
	}
	
	public ParserRule getXplatformHeaderKeyValuePairRule() {
		return getXplatformHeaderKeyValuePairAccess().getRule();
	}

	//terminal XPLATFORM_HEADER_PARAMETER:
	//	"{" ID "}";
	public TerminalRule getXPLATFORM_HEADER_PARAMETERRule() {
		return (tXPLATFORM_HEADER_PARAMETER != null) ? tXPLATFORM_HEADER_PARAMETER : (tXPLATFORM_HEADER_PARAMETER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XPLATFORM_HEADER_PARAMETER"));
	} 

	//terminal RESTFUL_METHODS:
	//	"PUT" | "POST" | "GET" | // TODO HEAD will be automagically generated as well, a body-less response
	//	"DELETE";
	public TerminalRule getRESTFUL_METHODSRule() {
		return (tRESTFUL_METHODS != null) ? tRESTFUL_METHODS : (tRESTFUL_METHODS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "RESTFUL_METHODS"));
	} 

	//XplatformJson:
	//	name=ID "\'\'\'" value=JsonObjectValue "\'\'\'";
	public XplatformJsonElements getXplatformJsonAccess() {
		return (pXplatformJson != null) ? pXplatformJson : (pXplatformJson = new XplatformJsonElements());
	}
	
	public ParserRule getXplatformJsonRule() {
		return getXplatformJsonAccess().getRule();
	}

	/// *
	//
	//
	//JsonMetaType:
	//	scalar=JsonMetaScalarType | composite=JsonMetaArray
	//;
	//
	//JsonCompositeType:
	//	composite=JsonArray
	//;
	//
	//JsonType:
	//	scalar=JsonScalarType | composite=JsonCompositeType
	//;
	//
	//JsonScalarType:
	//	bool=JSON_LITERAL_BOOLEAN | string=STRING | number= | null=JSON_LITERAL_NULL 
	//;
	//
	//JsonArray:
	//	('[' (elements+=JsonScalarType) (',' elements+=JsonScalarType )* (',')? ']') |
	//	('[' (composites+=JsonCompositeType) (',' composites+=JsonCompositeType )* (',')? ']')
	//;
	//
	//JsonObject:
	//	'{'
	//		(keys+=STRING ':' values+=XplatformJson)
	//		(','
	//			keys+=STRING ':' values+=XplatformJson
	//		)* (',')?
	//	'}'
	//;
	// * / // Borrowed from http://www.ebpml.org/blog2/index.php/2010/11/05/mde-xtext-and-json
	//JsonObjectValue:
	//	value=STRING | JsonObject | JsonArray | EMPTY_JSON_OBJECT | EMPTY_JSON_ARRAY | JSON_LITERAL_BOOLEAN |
	//	JSON_LITERAL_NULL | JSON_META_SCALAR_TYPE | JSON_NUMBER;
	public JsonObjectValueElements getJsonObjectValueAccess() {
		return (pJsonObjectValue != null) ? pJsonObjectValue : (pJsonObjectValue = new JsonObjectValueElements());
	}
	
	public ParserRule getJsonObjectValueRule() {
		return getJsonObjectValueAccess().getRule();
	}

	//JsonObject:
	//	"{" keyValuePair+=JsonKeyValuePair ("," keyValuePair+=JsonKeyValuePair)* ","? "}";
	public JsonObjectElements getJsonObjectAccess() {
		return (pJsonObject != null) ? pJsonObject : (pJsonObject = new JsonObjectElements());
	}
	
	public ParserRule getJsonObjectRule() {
		return getJsonObjectAccess().getRule();
	}

	//JsonKeyValuePair:
	//	key=STRING ":" value=JsonObjectValue;
	public JsonKeyValuePairElements getJsonKeyValuePairAccess() {
		return (pJsonKeyValuePair != null) ? pJsonKeyValuePair : (pJsonKeyValuePair = new JsonKeyValuePairElements());
	}
	
	public ParserRule getJsonKeyValuePairRule() {
		return getJsonKeyValuePairAccess().getRule();
	}

	//JsonArray:
	//	"[" items+=JsonObjectValue ("," items+=JsonObjectValue)* ","? "]";
	public JsonArrayElements getJsonArrayAccess() {
		return (pJsonArray != null) ? pJsonArray : (pJsonArray = new JsonArrayElements());
	}
	
	public ParserRule getJsonArrayRule() {
		return getJsonArrayAccess().getRule();
	}

	//terminal JSON_META_SCALAR_TYPE:
	//	"boolean" | "number" | "string";
	public TerminalRule getJSON_META_SCALAR_TYPERule() {
		return (tJSON_META_SCALAR_TYPE != null) ? tJSON_META_SCALAR_TYPE : (tJSON_META_SCALAR_TYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_META_SCALAR_TYPE"));
	} 

	//terminal EMPTY_JSON_OBJECT:
	//	"{}";
	public TerminalRule getEMPTY_JSON_OBJECTRule() {
		return (tEMPTY_JSON_OBJECT != null) ? tEMPTY_JSON_OBJECT : (tEMPTY_JSON_OBJECT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EMPTY_JSON_OBJECT"));
	} 

	//terminal EMPTY_JSON_ARRAY:
	//	"[]";
	public TerminalRule getEMPTY_JSON_ARRAYRule() {
		return (tEMPTY_JSON_ARRAY != null) ? tEMPTY_JSON_ARRAY : (tEMPTY_JSON_ARRAY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EMPTY_JSON_ARRAY"));
	} 

	//terminal JSON_LITERAL_NULL:
	//	"null";
	public TerminalRule getJSON_LITERAL_NULLRule() {
		return (tJSON_LITERAL_NULL != null) ? tJSON_LITERAL_NULL : (tJSON_LITERAL_NULL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_NULL"));
	} 

	//terminal JSON_LITERAL_BOOLEAN:
	//	"true" | "false";
	public TerminalRule getJSON_LITERAL_BOOLEANRule() {
		return (tJSON_LITERAL_BOOLEAN != null) ? tJSON_LITERAL_BOOLEAN : (tJSON_LITERAL_BOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_BOOLEAN"));
	} 

	//terminal JSON_NUMBER:
	//	("0" | "1..9"+ INT) ("." INT)?;
	public TerminalRule getJSON_NUMBERRule() {
		return (tJSON_NUMBER != null) ? tJSON_NUMBER : (tJSON_NUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_NUMBER"));
	} 

	/// **
	// * 
	// * Xplatform resource generator
	// * 
	// * / XplatformResourceDefinition:
	//	resources+=MapInstance | EnumInstance;
	public XplatformResourceDefinitionElements getXplatformResourceDefinitionAccess() {
		return (pXplatformResourceDefinition != null) ? pXplatformResourceDefinition : (pXplatformResourceDefinition = new XplatformResourceDefinitionElements());
	}
	
	public ParserRule getXplatformResourceDefinitionRule() {
		return getXplatformResourceDefinitionAccess().getRule();
	}

	//EnumInstance:
	//	"enum" name=ID "{" values+=ID ("," values+=ID)* ","? "}";
	public EnumInstanceElements getEnumInstanceAccess() {
		return (pEnumInstance != null) ? pEnumInstance : (pEnumInstance = new EnumInstanceElements());
	}
	
	public ParserRule getEnumInstanceRule() {
		return getEnumInstanceAccess().getRule();
	}

	//MapInstance:
	//	"map" name=ID "{" (keys+=ID ":" values+=NestedType) ("," keys+=ID ":" values+=NestedType)* ","? // you must have at least one map
	//	"}";
	public MapInstanceElements getMapInstanceAccess() {
		return (pMapInstance != null) ? pMapInstance : (pMapInstance = new MapInstanceElements());
	}
	
	public ParserRule getMapInstanceRule() {
		return getMapInstanceAccess().getRule();
	}

	//StringList:
	//	"[" values+=STRING ("," values+=STRING)* ","? "]";
	public StringListElements getStringListAccess() {
		return (pStringList != null) ? pStringList : (pStringList = new StringListElements());
	}
	
	public ParserRule getStringListRule() {
		return getStringListAccess().getRule();
	}

	//NestedType:
	//	STRING | StringList;
	public NestedTypeElements getNestedTypeAccess() {
		return (pNestedType != null) ? pNestedType : (pNestedType = new NestedTypeElements());
	}
	
	public ParserRule getNestedTypeRule() {
		return getNestedTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
