/*
* generated by Xtext
*/

package nl.sison.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XplatformGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class XplatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Xplatform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cMethodAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMethodRESTFUL_METHODSTerminalRuleCall_2_0 = (RuleCall)cMethodAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUriAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cUriURIParserRuleCall_4_0 = (RuleCall)cUriAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWithKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cHeadersKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cFromKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cRequestKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cRequestHeadersAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cRequestHeadersXplatformHeaderParserRuleCall_5_4_0 = (RuleCall)cRequestHeadersAssignment_5_4.eContents().get(0);
		private final Group cGroup_5_5 = (Group)cGroup_5.eContents().get(5);
		private final Keyword cAndKeyword_5_5_0 = (Keyword)cGroup_5_5.eContents().get(0);
		private final Keyword cResponseKeyword_5_5_1 = (Keyword)cGroup_5_5.eContents().get(1);
		private final Assignment cResponseHeadersAssignment_5_5_2 = (Assignment)cGroup_5_5.eContents().get(2);
		private final RuleCall cResponseHeadersXplatformHeaderParserRuleCall_5_5_2_0 = (RuleCall)cResponseHeadersAssignment_5_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cClientKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cExpectsKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cJsonToClientAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cJsonToClientXplatformJsonParserRuleCall_6_2_0 = (RuleCall)cJsonToClientAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cServerKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Keyword cExpectsKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final Assignment cJsonToServerAssignment_6_3_2 = (Assignment)cGroup_6_3.eContents().get(2);
		private final RuleCall cJsonToServerXplatformJsonParserRuleCall_6_3_2_0 = (RuleCall)cJsonToServerAssignment_6_3_2.eContents().get(0);
		
		//Xplatform:
		//	"call" name=ID method=RESTFUL_METHODS "from" uri=URI ("with" "headers" "from" "request" requestHeaders=XplatformHeader
		//	("and" "response" responseHeaders=XplatformHeader)?)? ("client" "expects" jsonToClient=XplatformJson ("server"
		//	"expects" jsonToServer=XplatformJson)?)?;
		public ParserRule getRule() { return rule; }

		//"call" name=ID method=RESTFUL_METHODS "from" uri=URI ("with" "headers" "from" "request" requestHeaders=XplatformHeader
		//("and" "response" responseHeaders=XplatformHeader)?)? ("client" "expects" jsonToClient=XplatformJson ("server"
		//"expects" jsonToServer=XplatformJson)?)?
		public Group getGroup() { return cGroup; }

		//"call"
		public Keyword getCallKeyword_0() { return cCallKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//method=RESTFUL_METHODS
		public Assignment getMethodAssignment_2() { return cMethodAssignment_2; }

		//RESTFUL_METHODS
		public RuleCall getMethodRESTFUL_METHODSTerminalRuleCall_2_0() { return cMethodRESTFUL_METHODSTerminalRuleCall_2_0; }

		//"from"
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }

		//uri=URI
		public Assignment getUriAssignment_4() { return cUriAssignment_4; }

		//URI
		public RuleCall getUriURIParserRuleCall_4_0() { return cUriURIParserRuleCall_4_0; }

		//("with" "headers" "from" "request" requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)?
		public Group getGroup_5() { return cGroup_5; }

		//"with"
		public Keyword getWithKeyword_5_0() { return cWithKeyword_5_0; }

		//"headers"
		public Keyword getHeadersKeyword_5_1() { return cHeadersKeyword_5_1; }

		//"from"
		public Keyword getFromKeyword_5_2() { return cFromKeyword_5_2; }

		//"request"
		public Keyword getRequestKeyword_5_3() { return cRequestKeyword_5_3; }

		//requestHeaders=XplatformHeader
		public Assignment getRequestHeadersAssignment_5_4() { return cRequestHeadersAssignment_5_4; }

		//XplatformHeader
		public RuleCall getRequestHeadersXplatformHeaderParserRuleCall_5_4_0() { return cRequestHeadersXplatformHeaderParserRuleCall_5_4_0; }

		//("and" "response" responseHeaders=XplatformHeader)?
		public Group getGroup_5_5() { return cGroup_5_5; }

		//"and"
		public Keyword getAndKeyword_5_5_0() { return cAndKeyword_5_5_0; }

		//"response"
		public Keyword getResponseKeyword_5_5_1() { return cResponseKeyword_5_5_1; }

		//responseHeaders=XplatformHeader
		public Assignment getResponseHeadersAssignment_5_5_2() { return cResponseHeadersAssignment_5_5_2; }

		//XplatformHeader
		public RuleCall getResponseHeadersXplatformHeaderParserRuleCall_5_5_2_0() { return cResponseHeadersXplatformHeaderParserRuleCall_5_5_2_0; }

		//("client" "expects" jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?
		public Group getGroup_6() { return cGroup_6; }

		//"client"
		public Keyword getClientKeyword_6_0() { return cClientKeyword_6_0; }

		//"expects"
		public Keyword getExpectsKeyword_6_1() { return cExpectsKeyword_6_1; }

		//jsonToClient=XplatformJson
		public Assignment getJsonToClientAssignment_6_2() { return cJsonToClientAssignment_6_2; }

		//XplatformJson
		public RuleCall getJsonToClientXplatformJsonParserRuleCall_6_2_0() { return cJsonToClientXplatformJsonParserRuleCall_6_2_0; }

		//("server" "expects" jsonToServer=XplatformJson)?
		public Group getGroup_6_3() { return cGroup_6_3; }

		//"server"
		public Keyword getServerKeyword_6_3_0() { return cServerKeyword_6_3_0; }

		//"expects"
		public Keyword getExpectsKeyword_6_3_1() { return cExpectsKeyword_6_3_1; }

		//jsonToServer=XplatformJson
		public Assignment getJsonToServerAssignment_6_3_2() { return cJsonToServerAssignment_6_3_2; }

		//XplatformJson
		public RuleCall getJsonToServerXplatformJsonParserRuleCall_6_3_2_0() { return cJsonToServerXplatformJsonParserRuleCall_6_3_2_0; }
	}

	public class URIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "URI");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cANY_OTHERTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUriParameterAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUriParameterIDTerminalRuleCall_1_1_0 = (RuleCall)cUriParameterAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);
		
		//URI:
		//	ANY_OTHER+ ("{" uriParameter+=ID "}" ANY_OTHER*)?;
		public ParserRule getRule() { return rule; }

		//ANY_OTHER+ ("{" uriParameter+=ID "}" ANY_OTHER*)?
		public Group getGroup() { return cGroup; }

		//ANY_OTHER+
		public RuleCall getANY_OTHERTerminalRuleCall_0() { return cANY_OTHERTerminalRuleCall_0; }

		//("{" uriParameter+=ID "}" ANY_OTHER*)?
		public Group getGroup_1() { return cGroup_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//uriParameter+=ID
		public Assignment getUriParameterAssignment_1_1() { return cUriParameterAssignment_1_1; }

		//ID
		public RuleCall getUriParameterIDTerminalRuleCall_1_1_0() { return cUriParameterIDTerminalRuleCall_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }

		//ANY_OTHER*
		public RuleCall getANY_OTHERTerminalRuleCall_1_3() { return cANY_OTHERTerminalRuleCall_1_3; }
	}

	public class XplatformHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApostropheApostropheApostropheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHeaderKeyValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_2_0 = (RuleCall)cHeaderKeyValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHeaderKeyValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_1_0 = (RuleCall)cHeaderKeyValuesAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cApostropheApostropheApostropheKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// TODO refactor
		//XplatformHeader:
		//	"\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValuePair ("," headerKeyValues+=XplatformHeaderKeyValuePair ","?)* "}"
		//	"\'\'\'";
		public ParserRule getRule() { return rule; }

		//"\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValuePair ("," headerKeyValues+=XplatformHeaderKeyValuePair ","?)* "}"
		//"\'\'\'"
		public Group getGroup() { return cGroup; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_0() { return cApostropheApostropheApostropheKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//headerKeyValues+=XplatformHeaderKeyValuePair
		public Assignment getHeaderKeyValuesAssignment_2() { return cHeaderKeyValuesAssignment_2; }

		//XplatformHeaderKeyValuePair
		public RuleCall getHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_2_0() { return cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_2_0; }

		//("," headerKeyValues+=XplatformHeaderKeyValuePair ","?)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//headerKeyValues+=XplatformHeaderKeyValuePair
		public Assignment getHeaderKeyValuesAssignment_3_1() { return cHeaderKeyValuesAssignment_3_1; }

		//XplatformHeaderKeyValuePair
		public RuleCall getHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_1_0() { return cHeaderKeyValuesXplatformHeaderKeyValuePairParserRuleCall_3_1_0; }

		//","?
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_5() { return cApostropheApostropheApostropheKeyword_5; }
	}

	public class XplatformHeaderKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformHeaderKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		
		//XplatformHeaderKeyValuePair:
		//	key=STRING "=" (value=STRING | value=XPLATFORM_HEADER_PARAMETER);
		public ParserRule getRule() { return rule; }

		//key=STRING "=" (value=STRING | value=XPLATFORM_HEADER_PARAMETER)
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING | value=XPLATFORM_HEADER_PARAMETER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//value=STRING
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0_0() { return cValueSTRINGTerminalRuleCall_2_0_0; }

		//value=XPLATFORM_HEADER_PARAMETER
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }

		//XPLATFORM_HEADER_PARAMETER
		public RuleCall getValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0() { return cValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0; }
	}

	public class XplatformJsonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformJson");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeJsonTypeParserRuleCall_0_1_0 = (RuleCall)cTypeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cMetaTypeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cMetaTypeJsonMetaTypeParserRuleCall_1_0_0 = (RuleCall)cMetaTypeAssignment_1_0.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//XplatformJson:
		//	"\'\'\'" type=JsonType | metaType= //| composite=JsonObject
		//	JsonMetaType "\'\'\'";
		public ParserRule getRule() { return rule; }

		//"\'\'\'" type=JsonType | metaType= //| composite=JsonObject
		//JsonMetaType "\'\'\'"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"\'\'\'" type=JsonType
		public Group getGroup_0() { return cGroup_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_0_0() { return cApostropheApostropheApostropheKeyword_0_0; }

		//type=JsonType
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }

		//JsonType
		public RuleCall getTypeJsonTypeParserRuleCall_0_1_0() { return cTypeJsonTypeParserRuleCall_0_1_0; }

		//metaType= //| composite=JsonObject
		//JsonMetaType "\'\'\'"
		public Group getGroup_1() { return cGroup_1; }

		//metaType= //| composite=JsonObject
		//JsonMetaType
		public Assignment getMetaTypeAssignment_1_0() { return cMetaTypeAssignment_1_0; }

		////| composite=JsonObject
		//JsonMetaType
		public RuleCall getMetaTypeJsonMetaTypeParserRuleCall_1_0_0() { return cMetaTypeJsonMetaTypeParserRuleCall_1_0_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_1_1() { return cApostropheApostropheApostropheKeyword_1_1; }
	}

	public class JsonMetaScalarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaScalarType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBooleanKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNumberKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cStringKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//JsonMetaScalarType:
		//	"boolean" | "number" | "string";
		public ParserRule getRule() { return rule; }

		//"boolean" | "number" | "string"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"boolean"
		public Keyword getBooleanKeyword_0() { return cBooleanKeyword_0; }

		//"number"
		public Keyword getNumberKeyword_1() { return cNumberKeyword_1; }

		//"string"
		public Keyword getStringKeyword_2() { return cStringKeyword_2; }
	}

	public class JsonMetaArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetaTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMetaTypeJsonMetaTypeParserRuleCall_1_0 = (RuleCall)cMetaTypeAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//JsonMetaArray:
		//	"[" metaType=JsonMetaType "]";
		public ParserRule getRule() { return rule; }

		//"[" metaType=JsonMetaType "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//metaType=JsonMetaType
		public Assignment getMetaTypeAssignment_1() { return cMetaTypeAssignment_1; }

		//JsonMetaType
		public RuleCall getMetaTypeJsonMetaTypeParserRuleCall_1_0() { return cMetaTypeJsonMetaTypeParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class JsonMetaTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cScalarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cScalarJsonMetaScalarTypeParserRuleCall_0_0 = (RuleCall)cScalarAssignment_0.eContents().get(0);
		private final Assignment cCompositeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cCompositeJsonMetaArrayParserRuleCall_1_0 = (RuleCall)cCompositeAssignment_1.eContents().get(0);
		
		//JsonMetaType:
		//	scalar=JsonMetaScalarType | composite=JsonMetaArray;
		public ParserRule getRule() { return rule; }

		//scalar=JsonMetaScalarType | composite=JsonMetaArray
		public Alternatives getAlternatives() { return cAlternatives; }

		//scalar=JsonMetaScalarType
		public Assignment getScalarAssignment_0() { return cScalarAssignment_0; }

		//JsonMetaScalarType
		public RuleCall getScalarJsonMetaScalarTypeParserRuleCall_0_0() { return cScalarJsonMetaScalarTypeParserRuleCall_0_0; }

		//composite=JsonMetaArray
		public Assignment getCompositeAssignment_1() { return cCompositeAssignment_1; }

		//JsonMetaArray
		public RuleCall getCompositeJsonMetaArrayParserRuleCall_1_0() { return cCompositeJsonMetaArrayParserRuleCall_1_0; }
	}

	public class JsonCompositeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonCompositeType");
		private final Assignment cCompositeAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCompositeJsonArrayParserRuleCall_0 = (RuleCall)cCompositeAssignment.eContents().get(0);
		
		//JsonCompositeType:
		//	composite=JsonArray;
		public ParserRule getRule() { return rule; }

		//composite=JsonArray
		public Assignment getCompositeAssignment() { return cCompositeAssignment; }

		//JsonArray
		public RuleCall getCompositeJsonArrayParserRuleCall_0() { return cCompositeJsonArrayParserRuleCall_0; }
	}

	public class JsonTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cScalarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cScalarJsonScalarTypeParserRuleCall_0_0 = (RuleCall)cScalarAssignment_0.eContents().get(0);
		private final Assignment cCompositeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cCompositeJsonCompositeTypeParserRuleCall_1_0 = (RuleCall)cCompositeAssignment_1.eContents().get(0);
		
		//JsonType:
		//	scalar=JsonScalarType | composite=JsonCompositeType;
		public ParserRule getRule() { return rule; }

		//scalar=JsonScalarType | composite=JsonCompositeType
		public Alternatives getAlternatives() { return cAlternatives; }

		//scalar=JsonScalarType
		public Assignment getScalarAssignment_0() { return cScalarAssignment_0; }

		//JsonScalarType
		public RuleCall getScalarJsonScalarTypeParserRuleCall_0_0() { return cScalarJsonScalarTypeParserRuleCall_0_0; }

		//composite=JsonCompositeType
		public Assignment getCompositeAssignment_1() { return cCompositeAssignment_1; }

		//JsonCompositeType
		public RuleCall getCompositeJsonCompositeTypeParserRuleCall_1_0() { return cCompositeJsonCompositeTypeParserRuleCall_1_0; }
	}

	public class JsonScalarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonScalarType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cBoolAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cBoolJSON_LITERAL_BOOLEANTerminalRuleCall_0_0 = (RuleCall)cBoolAssignment_0.eContents().get(0);
		private final Assignment cStringAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cStringSTRINGTerminalRuleCall_1_0 = (RuleCall)cStringAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cNumberAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cNumberINTTerminalRuleCall_2_0_0 = (RuleCall)cNumberAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cFullStopKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_2_1_1 = (RuleCall)cGroup_2_1.eContents().get(1);
		private final Assignment cNullAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cNullJSON_LITERAL_NULLTerminalRuleCall_3_0 = (RuleCall)cNullAssignment_3.eContents().get(0);
		
		//JsonScalarType:
		//	bool=JSON_LITERAL_BOOLEAN | string=STRING | number=INT ("." INT)? | null=JSON_LITERAL_NULL;
		public ParserRule getRule() { return rule; }

		//bool=JSON_LITERAL_BOOLEAN | string=STRING | number=INT ("." INT)? | null=JSON_LITERAL_NULL
		public Alternatives getAlternatives() { return cAlternatives; }

		//bool=JSON_LITERAL_BOOLEAN
		public Assignment getBoolAssignment_0() { return cBoolAssignment_0; }

		//JSON_LITERAL_BOOLEAN
		public RuleCall getBoolJSON_LITERAL_BOOLEANTerminalRuleCall_0_0() { return cBoolJSON_LITERAL_BOOLEANTerminalRuleCall_0_0; }

		//string=STRING
		public Assignment getStringAssignment_1() { return cStringAssignment_1; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_1_0() { return cStringSTRINGTerminalRuleCall_1_0; }

		//number=INT ("." INT)?
		public Group getGroup_2() { return cGroup_2; }

		//number=INT
		public Assignment getNumberAssignment_2_0() { return cNumberAssignment_2_0; }

		//INT
		public RuleCall getNumberINTTerminalRuleCall_2_0_0() { return cNumberINTTerminalRuleCall_2_0_0; }

		//("." INT)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"."
		public Keyword getFullStopKeyword_2_1_0() { return cFullStopKeyword_2_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_2_1_1() { return cINTTerminalRuleCall_2_1_1; }

		//null=JSON_LITERAL_NULL
		public Assignment getNullAssignment_3() { return cNullAssignment_3; }

		//JSON_LITERAL_NULL
		public RuleCall getNullJSON_LITERAL_NULLTerminalRuleCall_3_0() { return cNullJSON_LITERAL_NULLTerminalRuleCall_3_0; }
	}

	public class JsonArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonArray");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cElementAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cElementJsonScalarTypeParserRuleCall_0_1_0 = (RuleCall)cElementAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cCommaKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cElementAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cElementJsonScalarTypeParserRuleCall_0_2_1_0 = (RuleCall)cElementAssignment_0_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_0_2_2 = (Keyword)cGroup_0_2.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cCompositeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cCompositeJsonCompositeTypeParserRuleCall_1_1_0 = (RuleCall)cCompositeAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cCompositeAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cCompositeJsonCompositeTypeParserRuleCall_1_2_1_0 = (RuleCall)cCompositeAssignment_1_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_2_2 = (Keyword)cGroup_1_2.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//JsonArray:
		//	"[" element+=JsonScalarType ("," element+=JsonScalarType ","?)* "]" | "[" composite+=JsonCompositeType (","
		//	composite+=JsonCompositeType ","?)* "]";
		public ParserRule getRule() { return rule; }

		//"[" element+=JsonScalarType ("," element+=JsonScalarType ","?)* "]" | "[" composite+=JsonCompositeType (","
		//composite+=JsonCompositeType ","?)* "]"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"[" element+=JsonScalarType ("," element+=JsonScalarType ","?)* "]"
		public Group getGroup_0() { return cGroup_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_0() { return cLeftSquareBracketKeyword_0_0; }

		//element+=JsonScalarType
		public Assignment getElementAssignment_0_1() { return cElementAssignment_0_1; }

		//JsonScalarType
		public RuleCall getElementJsonScalarTypeParserRuleCall_0_1_0() { return cElementJsonScalarTypeParserRuleCall_0_1_0; }

		//("," element+=JsonScalarType ","?)*
		public Group getGroup_0_2() { return cGroup_0_2; }

		//","
		public Keyword getCommaKeyword_0_2_0() { return cCommaKeyword_0_2_0; }

		//element+=JsonScalarType
		public Assignment getElementAssignment_0_2_1() { return cElementAssignment_0_2_1; }

		//JsonScalarType
		public RuleCall getElementJsonScalarTypeParserRuleCall_0_2_1_0() { return cElementJsonScalarTypeParserRuleCall_0_2_1_0; }

		//","?
		public Keyword getCommaKeyword_0_2_2() { return cCommaKeyword_0_2_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_3() { return cRightSquareBracketKeyword_0_3; }

		//"[" composite+=JsonCompositeType ("," composite+=JsonCompositeType ","?)* "]"
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//composite+=JsonCompositeType
		public Assignment getCompositeAssignment_1_1() { return cCompositeAssignment_1_1; }

		//JsonCompositeType
		public RuleCall getCompositeJsonCompositeTypeParserRuleCall_1_1_0() { return cCompositeJsonCompositeTypeParserRuleCall_1_1_0; }

		//("," composite+=JsonCompositeType ","?)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//composite+=JsonCompositeType
		public Assignment getCompositeAssignment_1_2_1() { return cCompositeAssignment_1_2_1; }

		//JsonCompositeType
		public RuleCall getCompositeJsonCompositeTypeParserRuleCall_1_2_1_0() { return cCompositeJsonCompositeTypeParserRuleCall_1_2_1_0; }

		//","?
		public Keyword getCommaKeyword_1_2_2() { return cCommaKeyword_1_2_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}

	public class JsonKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonTypeParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonKeyValuePair:
		//	key=STRING ":" value=JsonType;
		public ParserRule getRule() { return rule; }

		//key=STRING ":" value=JsonType
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=JsonType
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//JsonType
		public RuleCall getValueJsonTypeParserRuleCall_2_0() { return cValueJsonTypeParserRuleCall_2_0; }
	}

	public class JsonMetaKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonMetaTypeParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonMetaKeyValuePair:
		//	key=STRING ":" value=JsonMetaType;
		public ParserRule getRule() { return rule; }

		//key=STRING ":" value=JsonMetaType
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=JsonMetaType
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//JsonMetaType
		public RuleCall getValueJsonMetaTypeParserRuleCall_2_0() { return cValueJsonMetaTypeParserRuleCall_2_0; }
	}

	public class UnnestedKeyPairsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnnestedKeyPairs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cKeyValuePairAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cKeyValuePairJsonKeyValuePairParserRuleCall_0_0_0 = (RuleCall)cKeyValuePairAssignment_0_0.eContents().get(0);
		private final Assignment cKeyValuePairAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cKeyValuePairJsonMetaKeyValuePairParserRuleCall_0_1_0 = (RuleCall)cKeyValuePairAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cKeyValuePairAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cKeyValuePairJsonKeyValuePairParserRuleCall_1_1_0_0 = (RuleCall)cKeyValuePairAssignment_1_1_0.eContents().get(0);
		private final Assignment cKeyValuePairAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cKeyValuePairJsonMetaKeyValuePairParserRuleCall_1_1_1_0 = (RuleCall)cKeyValuePairAssignment_1_1_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		/// *
		//JsonObjectKernel:
		//	'{'
		//		keyPairs=UnnestedKeyPairs 
		//	'}'
		//;
		//
		//JsonObjectLeftNestedKeyValuePair:
		//	(keys+=STRING ':' (right+=JsonObjectRightNested | all+=JsonObjectAllNested))+
		//	(',' unnestedKeyPairs+=UnnestedKeyPairs)+ ','?
		//;
		//
		//JsonObjectRightNestedKeyValuePair:
		//	(unnestedKeyPairs=UnnestedKeyPairs ',') 
		//	(',' keys+=STRING ':' (right+=JsonObjectLeftNested | all+=JsonObjectAllNested))+ ','?
		//;
		//
		//JsonObjectAllNestedKeyValuePair:
		//	(keys+=STRING ':' '{' leftKeyValuePair+=JsonObjectLeftNestedKeyValuePair | rightKeyValuePair+=JsonObjectRightNestedKeyValuePair '}')
		//	(',' keys+=STRING ':' '{' leftKeyValuePair+=JsonObjectLeftNestedKeyValuePair | rightKeyValuePair+=JsonObjectRightNestedKeyValuePair '}')* 
		//;
		//
		//JsonObjectLeftNested:
		//	'{'
		//		keyPairs=JsonObjectLeftNestedKeyValuePair
		//	'}'
		//;
		//
		//JsonObjectRightNested:
		//	'{'
		//		keyPairs=JsonObjectRightNestedKeyValuePair
		//	'}'
		//;
		//
		//JsonObjectAllNested:
		//	'{'
		//		keyPairs=JsonObjectAllNestedKeyValuePair
		//	'}'
		//;
		//
		//JsonObject:
		//	left=JsonObjectLeftNested | right=JsonObjectRightNested | kernel=JsonObjectKernel | all=JsonObjectAllNested
		//;
		// * / UnnestedKeyPairs:
		//	(keyValuePair+=JsonKeyValuePair //| nestedKeyValuePair+=JsonNestedObject)
		//	| keyValuePair+=JsonMetaKeyValuePair) ("," (keyValuePair+=JsonKeyValuePair // | nestedKeyValuePair+=JsonNestedObject)
		//	| keyValuePair+=JsonMetaKeyValuePair) ","?)*;
		public ParserRule getRule() { return rule; }

		//(keyValuePair+=JsonKeyValuePair //| nestedKeyValuePair+=JsonNestedObject)
		//| keyValuePair+=JsonMetaKeyValuePair) ("," (keyValuePair+=JsonKeyValuePair // | nestedKeyValuePair+=JsonNestedObject)
		//| keyValuePair+=JsonMetaKeyValuePair) ","?)*
		public Group getGroup() { return cGroup; }

		//keyValuePair+=JsonKeyValuePair //| nestedKeyValuePair+=JsonNestedObject)
		//| keyValuePair+=JsonMetaKeyValuePair
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//keyValuePair+=JsonKeyValuePair
		public Assignment getKeyValuePairAssignment_0_0() { return cKeyValuePairAssignment_0_0; }

		//JsonKeyValuePair
		public RuleCall getKeyValuePairJsonKeyValuePairParserRuleCall_0_0_0() { return cKeyValuePairJsonKeyValuePairParserRuleCall_0_0_0; }

		//keyValuePair+=JsonMetaKeyValuePair
		public Assignment getKeyValuePairAssignment_0_1() { return cKeyValuePairAssignment_0_1; }

		//JsonMetaKeyValuePair
		public RuleCall getKeyValuePairJsonMetaKeyValuePairParserRuleCall_0_1_0() { return cKeyValuePairJsonMetaKeyValuePairParserRuleCall_0_1_0; }

		//("," (keyValuePair+=JsonKeyValuePair // | nestedKeyValuePair+=JsonNestedObject)
		//| keyValuePair+=JsonMetaKeyValuePair) ","?)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//keyValuePair+=JsonKeyValuePair // | nestedKeyValuePair+=JsonNestedObject)
		//| keyValuePair+=JsonMetaKeyValuePair
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//keyValuePair+=JsonKeyValuePair
		public Assignment getKeyValuePairAssignment_1_1_0() { return cKeyValuePairAssignment_1_1_0; }

		//JsonKeyValuePair
		public RuleCall getKeyValuePairJsonKeyValuePairParserRuleCall_1_1_0_0() { return cKeyValuePairJsonKeyValuePairParserRuleCall_1_1_0_0; }

		//keyValuePair+=JsonMetaKeyValuePair
		public Assignment getKeyValuePairAssignment_1_1_1() { return cKeyValuePairAssignment_1_1_1; }

		//JsonMetaKeyValuePair
		public RuleCall getKeyValuePairJsonMetaKeyValuePairParserRuleCall_1_1_1_0() { return cKeyValuePairJsonMetaKeyValuePairParserRuleCall_1_1_1_0; }

		//","?
		public Keyword getCommaKeyword_1_2() { return cCommaKeyword_1_2; }
	}
	
	
	private XplatformElements pXplatform;
	private URIElements pURI;
	private XplatformHeaderElements pXplatformHeader;
	private XplatformHeaderKeyValuePairElements pXplatformHeaderKeyValuePair;
	private TerminalRule tXPLATFORM_HEADER_PARAMETER;
	private TerminalRule tRESTFUL_METHODS;
	private XplatformJsonElements pXplatformJson;
	private TerminalRule tJSON_LITERAL_NULL;
	private TerminalRule tJSON_LITERAL_BOOLEAN;
	private JsonMetaScalarTypeElements pJsonMetaScalarType;
	private JsonMetaArrayElements pJsonMetaArray;
	private JsonMetaTypeElements pJsonMetaType;
	private JsonCompositeTypeElements pJsonCompositeType;
	private JsonTypeElements pJsonType;
	private JsonScalarTypeElements pJsonScalarType;
	private JsonArrayElements pJsonArray;
	private JsonKeyValuePairElements pJsonKeyValuePair;
	private JsonMetaKeyValuePairElements pJsonMetaKeyValuePair;
	private UnnestedKeyPairsElements pUnnestedKeyPairs;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XplatformGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("nl.sison.Xplatform".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Xplatform:
	//	"call" name=ID method=RESTFUL_METHODS "from" uri=URI ("with" "headers" "from" "request" requestHeaders=XplatformHeader
	//	("and" "response" responseHeaders=XplatformHeader)?)? ("client" "expects" jsonToClient=XplatformJson ("server"
	//	"expects" jsonToServer=XplatformJson)?)?;
	public XplatformElements getXplatformAccess() {
		return (pXplatform != null) ? pXplatform : (pXplatform = new XplatformElements());
	}
	
	public ParserRule getXplatformRule() {
		return getXplatformAccess().getRule();
	}

	//URI:
	//	ANY_OTHER+ ("{" uriParameter+=ID "}" ANY_OTHER*)?;
	public URIElements getURIAccess() {
		return (pURI != null) ? pURI : (pURI = new URIElements());
	}
	
	public ParserRule getURIRule() {
		return getURIAccess().getRule();
	}

	//// TODO refactor
	//XplatformHeader:
	//	"\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValuePair ("," headerKeyValues+=XplatformHeaderKeyValuePair ","?)* "}"
	//	"\'\'\'";
	public XplatformHeaderElements getXplatformHeaderAccess() {
		return (pXplatformHeader != null) ? pXplatformHeader : (pXplatformHeader = new XplatformHeaderElements());
	}
	
	public ParserRule getXplatformHeaderRule() {
		return getXplatformHeaderAccess().getRule();
	}

	//XplatformHeaderKeyValuePair:
	//	key=STRING "=" (value=STRING | value=XPLATFORM_HEADER_PARAMETER);
	public XplatformHeaderKeyValuePairElements getXplatformHeaderKeyValuePairAccess() {
		return (pXplatformHeaderKeyValuePair != null) ? pXplatformHeaderKeyValuePair : (pXplatformHeaderKeyValuePair = new XplatformHeaderKeyValuePairElements());
	}
	
	public ParserRule getXplatformHeaderKeyValuePairRule() {
		return getXplatformHeaderKeyValuePairAccess().getRule();
	}

	//terminal XPLATFORM_HEADER_PARAMETER:
	//	"{" ID "}";
	public TerminalRule getXPLATFORM_HEADER_PARAMETERRule() {
		return (tXPLATFORM_HEADER_PARAMETER != null) ? tXPLATFORM_HEADER_PARAMETER : (tXPLATFORM_HEADER_PARAMETER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XPLATFORM_HEADER_PARAMETER"));
	} 

	//terminal RESTFUL_METHODS:
	//	"PUT" | "POST" | "GET" | // TODO HEAD will be automagically generated as well
	//	"DELETE";
	public TerminalRule getRESTFUL_METHODSRule() {
		return (tRESTFUL_METHODS != null) ? tRESTFUL_METHODS : (tRESTFUL_METHODS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "RESTFUL_METHODS"));
	} 

	//XplatformJson:
	//	"\'\'\'" type=JsonType | metaType= //| composite=JsonObject
	//	JsonMetaType "\'\'\'";
	public XplatformJsonElements getXplatformJsonAccess() {
		return (pXplatformJson != null) ? pXplatformJson : (pXplatformJson = new XplatformJsonElements());
	}
	
	public ParserRule getXplatformJsonRule() {
		return getXplatformJsonAccess().getRule();
	}

	//terminal JSON_LITERAL_NULL:
	//	"null";
	public TerminalRule getJSON_LITERAL_NULLRule() {
		return (tJSON_LITERAL_NULL != null) ? tJSON_LITERAL_NULL : (tJSON_LITERAL_NULL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_NULL"));
	} 

	//terminal JSON_LITERAL_BOOLEAN:
	//	"true" | "false";
	public TerminalRule getJSON_LITERAL_BOOLEANRule() {
		return (tJSON_LITERAL_BOOLEAN != null) ? tJSON_LITERAL_BOOLEAN : (tJSON_LITERAL_BOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_BOOLEAN"));
	} 

	//JsonMetaScalarType:
	//	"boolean" | "number" | "string";
	public JsonMetaScalarTypeElements getJsonMetaScalarTypeAccess() {
		return (pJsonMetaScalarType != null) ? pJsonMetaScalarType : (pJsonMetaScalarType = new JsonMetaScalarTypeElements());
	}
	
	public ParserRule getJsonMetaScalarTypeRule() {
		return getJsonMetaScalarTypeAccess().getRule();
	}

	//JsonMetaArray:
	//	"[" metaType=JsonMetaType "]";
	public JsonMetaArrayElements getJsonMetaArrayAccess() {
		return (pJsonMetaArray != null) ? pJsonMetaArray : (pJsonMetaArray = new JsonMetaArrayElements());
	}
	
	public ParserRule getJsonMetaArrayRule() {
		return getJsonMetaArrayAccess().getRule();
	}

	//JsonMetaType:
	//	scalar=JsonMetaScalarType | composite=JsonMetaArray;
	public JsonMetaTypeElements getJsonMetaTypeAccess() {
		return (pJsonMetaType != null) ? pJsonMetaType : (pJsonMetaType = new JsonMetaTypeElements());
	}
	
	public ParserRule getJsonMetaTypeRule() {
		return getJsonMetaTypeAccess().getRule();
	}

	//JsonCompositeType:
	//	composite=JsonArray;
	public JsonCompositeTypeElements getJsonCompositeTypeAccess() {
		return (pJsonCompositeType != null) ? pJsonCompositeType : (pJsonCompositeType = new JsonCompositeTypeElements());
	}
	
	public ParserRule getJsonCompositeTypeRule() {
		return getJsonCompositeTypeAccess().getRule();
	}

	//JsonType:
	//	scalar=JsonScalarType | composite=JsonCompositeType;
	public JsonTypeElements getJsonTypeAccess() {
		return (pJsonType != null) ? pJsonType : (pJsonType = new JsonTypeElements());
	}
	
	public ParserRule getJsonTypeRule() {
		return getJsonTypeAccess().getRule();
	}

	//JsonScalarType:
	//	bool=JSON_LITERAL_BOOLEAN | string=STRING | number=INT ("." INT)? | null=JSON_LITERAL_NULL;
	public JsonScalarTypeElements getJsonScalarTypeAccess() {
		return (pJsonScalarType != null) ? pJsonScalarType : (pJsonScalarType = new JsonScalarTypeElements());
	}
	
	public ParserRule getJsonScalarTypeRule() {
		return getJsonScalarTypeAccess().getRule();
	}

	//JsonArray:
	//	"[" element+=JsonScalarType ("," element+=JsonScalarType ","?)* "]" | "[" composite+=JsonCompositeType (","
	//	composite+=JsonCompositeType ","?)* "]";
	public JsonArrayElements getJsonArrayAccess() {
		return (pJsonArray != null) ? pJsonArray : (pJsonArray = new JsonArrayElements());
	}
	
	public ParserRule getJsonArrayRule() {
		return getJsonArrayAccess().getRule();
	}

	//JsonKeyValuePair:
	//	key=STRING ":" value=JsonType;
	public JsonKeyValuePairElements getJsonKeyValuePairAccess() {
		return (pJsonKeyValuePair != null) ? pJsonKeyValuePair : (pJsonKeyValuePair = new JsonKeyValuePairElements());
	}
	
	public ParserRule getJsonKeyValuePairRule() {
		return getJsonKeyValuePairAccess().getRule();
	}

	//JsonMetaKeyValuePair:
	//	key=STRING ":" value=JsonMetaType;
	public JsonMetaKeyValuePairElements getJsonMetaKeyValuePairAccess() {
		return (pJsonMetaKeyValuePair != null) ? pJsonMetaKeyValuePair : (pJsonMetaKeyValuePair = new JsonMetaKeyValuePairElements());
	}
	
	public ParserRule getJsonMetaKeyValuePairRule() {
		return getJsonMetaKeyValuePairAccess().getRule();
	}

	/// *
	//JsonObjectKernel:
	//	'{'
	//		keyPairs=UnnestedKeyPairs 
	//	'}'
	//;
	//
	//JsonObjectLeftNestedKeyValuePair:
	//	(keys+=STRING ':' (right+=JsonObjectRightNested | all+=JsonObjectAllNested))+
	//	(',' unnestedKeyPairs+=UnnestedKeyPairs)+ ','?
	//;
	//
	//JsonObjectRightNestedKeyValuePair:
	//	(unnestedKeyPairs=UnnestedKeyPairs ',') 
	//	(',' keys+=STRING ':' (right+=JsonObjectLeftNested | all+=JsonObjectAllNested))+ ','?
	//;
	//
	//JsonObjectAllNestedKeyValuePair:
	//	(keys+=STRING ':' '{' leftKeyValuePair+=JsonObjectLeftNestedKeyValuePair | rightKeyValuePair+=JsonObjectRightNestedKeyValuePair '}')
	//	(',' keys+=STRING ':' '{' leftKeyValuePair+=JsonObjectLeftNestedKeyValuePair | rightKeyValuePair+=JsonObjectRightNestedKeyValuePair '}')* 
	//;
	//
	//JsonObjectLeftNested:
	//	'{'
	//		keyPairs=JsonObjectLeftNestedKeyValuePair
	//	'}'
	//;
	//
	//JsonObjectRightNested:
	//	'{'
	//		keyPairs=JsonObjectRightNestedKeyValuePair
	//	'}'
	//;
	//
	//JsonObjectAllNested:
	//	'{'
	//		keyPairs=JsonObjectAllNestedKeyValuePair
	//	'}'
	//;
	//
	//JsonObject:
	//	left=JsonObjectLeftNested | right=JsonObjectRightNested | kernel=JsonObjectKernel | all=JsonObjectAllNested
	//;
	// * / UnnestedKeyPairs:
	//	(keyValuePair+=JsonKeyValuePair //| nestedKeyValuePair+=JsonNestedObject)
	//	| keyValuePair+=JsonMetaKeyValuePair) ("," (keyValuePair+=JsonKeyValuePair // | nestedKeyValuePair+=JsonNestedObject)
	//	| keyValuePair+=JsonMetaKeyValuePair) ","?)*;
	public UnnestedKeyPairsElements getUnnestedKeyPairsAccess() {
		return (pUnnestedKeyPairs != null) ? pUnnestedKeyPairs : (pUnnestedKeyPairs = new UnnestedKeyPairsElements());
	}
	
	public ParserRule getUnnestedKeyPairsRule() {
		return getUnnestedKeyPairsAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
