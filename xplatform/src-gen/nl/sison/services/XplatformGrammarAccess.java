/*
* generated by Xtext
*/

package nl.sison.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class XplatformGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class XplatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Xplatform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCallNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCallNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cCallNameAssignment_1.eContents().get(0);
		private final Assignment cMethodAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMethodRESTFUL_METHODSTerminalRuleCall_2_0 = (RuleCall)cMethodAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cUriPathParamsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cUriPathParamsSTRINGTerminalRuleCall_4_1_1_0 = (RuleCall)cUriPathParamsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWithKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cHeadersKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cFromKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cRequestKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cRequestHeadersAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cRequestHeadersXplatformHeaderParserRuleCall_5_4_0 = (RuleCall)cRequestHeadersAssignment_5_4.eContents().get(0);
		private final Group cGroup_5_5 = (Group)cGroup_5.eContents().get(5);
		private final Keyword cAndKeyword_5_5_0 = (Keyword)cGroup_5_5.eContents().get(0);
		private final Keyword cResponseKeyword_5_5_1 = (Keyword)cGroup_5_5.eContents().get(1);
		private final Assignment cResponseHeadersAssignment_5_5_2 = (Assignment)cGroup_5_5.eContents().get(2);
		private final RuleCall cResponseHeadersXplatformHeaderParserRuleCall_5_5_2_0 = (RuleCall)cResponseHeadersAssignment_5_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cClientKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cExpectsKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cJsonToClientAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cJsonToClientXplatformJsonParserRuleCall_6_2_0 = (RuleCall)cJsonToClientAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cServerKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Keyword cExpectsKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final Assignment cJsonToServerAssignment_6_3_2 = (Assignment)cGroup_6_3.eContents().get(2);
		private final RuleCall cJsonToServerXplatformJsonParserRuleCall_6_3_2_0 = (RuleCall)cJsonToServerAssignment_6_3_2.eContents().get(0);
		
		//Xplatform:
		//	"call" callName=STRING method=RESTFUL_METHODS "from" (STRING? ("{" uriPathParams+=STRING "}")* STRING?)+ ("with"
		//	"headers" "from" "request" requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)?
		//	("client" "expects" jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?;
		public ParserRule getRule() { return rule; }

		//"call" callName=STRING method=RESTFUL_METHODS "from" (STRING? ("{" uriPathParams+=STRING "}")* STRING?)+ ("with"
		//"headers" "from" "request" requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)?
		//("client" "expects" jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?
		public Group getGroup() { return cGroup; }

		//"call"
		public Keyword getCallKeyword_0() { return cCallKeyword_0; }

		//callName=STRING
		public Assignment getCallNameAssignment_1() { return cCallNameAssignment_1; }

		//STRING
		public RuleCall getCallNameSTRINGTerminalRuleCall_1_0() { return cCallNameSTRINGTerminalRuleCall_1_0; }

		//method=RESTFUL_METHODS
		public Assignment getMethodAssignment_2() { return cMethodAssignment_2; }

		//RESTFUL_METHODS
		public RuleCall getMethodRESTFUL_METHODSTerminalRuleCall_2_0() { return cMethodRESTFUL_METHODSTerminalRuleCall_2_0; }

		//"from"
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }

		//(STRING? ("{" uriPathParams+=STRING "}")* STRING?)+
		public Group getGroup_4() { return cGroup_4; }

		//STRING?
		public RuleCall getSTRINGTerminalRuleCall_4_0() { return cSTRINGTerminalRuleCall_4_0; }

		//("{" uriPathParams+=STRING "}")*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1_0() { return cLeftCurlyBracketKeyword_4_1_0; }

		//uriPathParams+=STRING
		public Assignment getUriPathParamsAssignment_4_1_1() { return cUriPathParamsAssignment_4_1_1; }

		//STRING
		public RuleCall getUriPathParamsSTRINGTerminalRuleCall_4_1_1_0() { return cUriPathParamsSTRINGTerminalRuleCall_4_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_1_2() { return cRightCurlyBracketKeyword_4_1_2; }

		//STRING?
		public RuleCall getSTRINGTerminalRuleCall_4_2() { return cSTRINGTerminalRuleCall_4_2; }

		//("with" "headers" "from" "request" requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)?
		public Group getGroup_5() { return cGroup_5; }

		//"with"
		public Keyword getWithKeyword_5_0() { return cWithKeyword_5_0; }

		//"headers"
		public Keyword getHeadersKeyword_5_1() { return cHeadersKeyword_5_1; }

		//"from"
		public Keyword getFromKeyword_5_2() { return cFromKeyword_5_2; }

		//"request"
		public Keyword getRequestKeyword_5_3() { return cRequestKeyword_5_3; }

		//requestHeaders=XplatformHeader
		public Assignment getRequestHeadersAssignment_5_4() { return cRequestHeadersAssignment_5_4; }

		//XplatformHeader
		public RuleCall getRequestHeadersXplatformHeaderParserRuleCall_5_4_0() { return cRequestHeadersXplatformHeaderParserRuleCall_5_4_0; }

		//("and" "response" responseHeaders=XplatformHeader)?
		public Group getGroup_5_5() { return cGroup_5_5; }

		//"and"
		public Keyword getAndKeyword_5_5_0() { return cAndKeyword_5_5_0; }

		//"response"
		public Keyword getResponseKeyword_5_5_1() { return cResponseKeyword_5_5_1; }

		//responseHeaders=XplatformHeader
		public Assignment getResponseHeadersAssignment_5_5_2() { return cResponseHeadersAssignment_5_5_2; }

		//XplatformHeader
		public RuleCall getResponseHeadersXplatformHeaderParserRuleCall_5_5_2_0() { return cResponseHeadersXplatformHeaderParserRuleCall_5_5_2_0; }

		//("client" "expects" jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?
		public Group getGroup_6() { return cGroup_6; }

		//"client"
		public Keyword getClientKeyword_6_0() { return cClientKeyword_6_0; }

		//"expects"
		public Keyword getExpectsKeyword_6_1() { return cExpectsKeyword_6_1; }

		//jsonToClient=XplatformJson
		public Assignment getJsonToClientAssignment_6_2() { return cJsonToClientAssignment_6_2; }

		//XplatformJson
		public RuleCall getJsonToClientXplatformJsonParserRuleCall_6_2_0() { return cJsonToClientXplatformJsonParserRuleCall_6_2_0; }

		//("server" "expects" jsonToServer=XplatformJson)?
		public Group getGroup_6_3() { return cGroup_6_3; }

		//"server"
		public Keyword getServerKeyword_6_3_0() { return cServerKeyword_6_3_0; }

		//"expects"
		public Keyword getExpectsKeyword_6_3_1() { return cExpectsKeyword_6_3_1; }

		//jsonToServer=XplatformJson
		public Assignment getJsonToServerAssignment_6_3_2() { return cJsonToServerAssignment_6_3_2; }

		//XplatformJson
		public RuleCall getJsonToServerXplatformJsonParserRuleCall_6_3_2_0() { return cJsonToServerXplatformJsonParserRuleCall_6_3_2_0; }
	}

	public class XplatformJsonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformJson");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeJsonTypeParserRuleCall_0_1_0 = (RuleCall)cTypeAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cMetaTypeAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cMetaTypeJsonMetaTypeParserRuleCall_1_0_0 = (RuleCall)cMetaTypeAssignment_1_0.eContents().get(0);
		private final Keyword cApostropheApostropheApostropheKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//XplatformJson:
		//	"\'\'\'" type=JsonType | metaType=JsonMetaType "\'\'\'";
		public ParserRule getRule() { return rule; }

		//"\'\'\'" type=JsonType | metaType=JsonMetaType "\'\'\'"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"\'\'\'" type=JsonType
		public Group getGroup_0() { return cGroup_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_0_0() { return cApostropheApostropheApostropheKeyword_0_0; }

		//type=JsonType
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }

		//JsonType
		public RuleCall getTypeJsonTypeParserRuleCall_0_1_0() { return cTypeJsonTypeParserRuleCall_0_1_0; }

		//metaType=JsonMetaType "\'\'\'"
		public Group getGroup_1() { return cGroup_1; }

		//metaType=JsonMetaType
		public Assignment getMetaTypeAssignment_1_0() { return cMetaTypeAssignment_1_0; }

		//JsonMetaType
		public RuleCall getMetaTypeJsonMetaTypeParserRuleCall_1_0_0() { return cMetaTypeJsonMetaTypeParserRuleCall_1_0_0; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_1_1() { return cApostropheApostropheApostropheKeyword_1_1; }
	}

	public class XplatformHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApostropheApostropheApostropheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHeaderKeyValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeaderKeyValuesXplatformHeaderKeyValueParserRuleCall_2_0 = (RuleCall)cHeaderKeyValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHeaderKeyValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHeaderKeyValuesXplatformHeaderKeyValueParserRuleCall_3_1_0 = (RuleCall)cHeaderKeyValuesAssignment_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cApostropheApostropheApostropheKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// TODO refactor
		//XplatformHeader:
		//	"\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValue? ("," headerKeyValues+=XplatformHeaderKeyValue ","?)* "}"
		//	"\'\'\'";
		public ParserRule getRule() { return rule; }

		//"\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValue? ("," headerKeyValues+=XplatformHeaderKeyValue ","?)* "}" "\'\'\'"
		public Group getGroup() { return cGroup; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_0() { return cApostropheApostropheApostropheKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//headerKeyValues+=XplatformHeaderKeyValue?
		public Assignment getHeaderKeyValuesAssignment_2() { return cHeaderKeyValuesAssignment_2; }

		//XplatformHeaderKeyValue
		public RuleCall getHeaderKeyValuesXplatformHeaderKeyValueParserRuleCall_2_0() { return cHeaderKeyValuesXplatformHeaderKeyValueParserRuleCall_2_0; }

		//("," headerKeyValues+=XplatformHeaderKeyValue ","?)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//headerKeyValues+=XplatformHeaderKeyValue
		public Assignment getHeaderKeyValuesAssignment_3_1() { return cHeaderKeyValuesAssignment_3_1; }

		//XplatformHeaderKeyValue
		public RuleCall getHeaderKeyValuesXplatformHeaderKeyValueParserRuleCall_3_1_0() { return cHeaderKeyValuesXplatformHeaderKeyValueParserRuleCall_3_1_0; }

		//","?
		public Keyword getCommaKeyword_3_2() { return cCommaKeyword_3_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"\'\'\'"
		public Keyword getApostropheApostropheApostropheKeyword_5() { return cApostropheApostropheApostropheKeyword_5; }
	}

	public class XplatformHeaderKeyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XplatformHeaderKeyValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyLITERAL_STRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cValueLITERAL_STRINGTerminalRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		
		//XplatformHeaderKeyValue:
		//	key=LITERAL_STRING "=" (value=LITERAL_STRING | value=XPLATFORM_HEADER_PARAMETER);
		public ParserRule getRule() { return rule; }

		//key=LITERAL_STRING "=" (value=LITERAL_STRING | value=XPLATFORM_HEADER_PARAMETER)
		public Group getGroup() { return cGroup; }

		//key=LITERAL_STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//LITERAL_STRING
		public RuleCall getKeyLITERAL_STRINGTerminalRuleCall_0_0() { return cKeyLITERAL_STRINGTerminalRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=LITERAL_STRING | value=XPLATFORM_HEADER_PARAMETER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//value=LITERAL_STRING
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }

		//LITERAL_STRING
		public RuleCall getValueLITERAL_STRINGTerminalRuleCall_2_0_0() { return cValueLITERAL_STRINGTerminalRuleCall_2_0_0; }

		//value=XPLATFORM_HEADER_PARAMETER
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }

		//XPLATFORM_HEADER_PARAMETER
		public RuleCall getValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0() { return cValueXPLATFORM_HEADER_PARAMETERTerminalRuleCall_2_1_0; }
	}

	public class JsonMetaTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBooleanKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNumberKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cStringKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final RuleCall cJsonMetaArrayParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//JsonMetaType:
		//	"boolean" | "number" | "string" | JsonMetaArray;
		public ParserRule getRule() { return rule; }

		//"boolean" | "number" | "string" | JsonMetaArray
		public Alternatives getAlternatives() { return cAlternatives; }

		//"boolean"
		public Keyword getBooleanKeyword_0() { return cBooleanKeyword_0; }

		//"number"
		public Keyword getNumberKeyword_1() { return cNumberKeyword_1; }

		//"string"
		public Keyword getStringKeyword_2() { return cStringKeyword_2; }

		//JsonMetaArray
		public RuleCall getJsonMetaArrayParserRuleCall_3() { return cJsonMetaArrayParserRuleCall_3; }
	}

	public class JsonTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJSON_LITERAL_BOOLEANTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLITERAL_STRINGTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJSON_LITERAL_NUMBERTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cJSON_LITERAL_NULLTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cJsonArrayParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cJsonMetaTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cJsonObjectParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//JsonType:
		//	JSON_LITERAL_BOOLEAN | LITERAL_STRING | JSON_LITERAL_NUMBER | JSON_LITERAL_NULL | JsonArray | JsonMetaType |
		//	JsonObject;
		public ParserRule getRule() { return rule; }

		//JSON_LITERAL_BOOLEAN | LITERAL_STRING | JSON_LITERAL_NUMBER | JSON_LITERAL_NULL | JsonArray | JsonMetaType | JsonObject
		public Alternatives getAlternatives() { return cAlternatives; }

		//JSON_LITERAL_BOOLEAN
		public RuleCall getJSON_LITERAL_BOOLEANTerminalRuleCall_0() { return cJSON_LITERAL_BOOLEANTerminalRuleCall_0; }

		//LITERAL_STRING
		public RuleCall getLITERAL_STRINGTerminalRuleCall_1() { return cLITERAL_STRINGTerminalRuleCall_1; }

		//JSON_LITERAL_NUMBER
		public RuleCall getJSON_LITERAL_NUMBERTerminalRuleCall_2() { return cJSON_LITERAL_NUMBERTerminalRuleCall_2; }

		//JSON_LITERAL_NULL
		public RuleCall getJSON_LITERAL_NULLTerminalRuleCall_3() { return cJSON_LITERAL_NULLTerminalRuleCall_3; }

		//JsonArray
		public RuleCall getJsonArrayParserRuleCall_4() { return cJsonArrayParserRuleCall_4; }

		//JsonMetaType
		public RuleCall getJsonMetaTypeParserRuleCall_5() { return cJsonMetaTypeParserRuleCall_5; }

		//JsonObject
		public RuleCall getJsonObjectParserRuleCall_6() { return cJsonObjectParserRuleCall_6; }
	}

	public class JsonArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeJsonTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeJsonTypeParserRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//JsonArray:
		//	"[" type+=JsonType? ("," type+=JsonType ","?)* "]";
		public ParserRule getRule() { return rule; }

		//"[" type+=JsonType? ("," type+=JsonType ","?)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//type+=JsonType?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//JsonType
		public RuleCall getTypeJsonTypeParserRuleCall_1_0() { return cTypeJsonTypeParserRuleCall_1_0; }

		//("," type+=JsonType ","?)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//type+=JsonType
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }

		//JsonType
		public RuleCall getTypeJsonTypeParserRuleCall_2_1_0() { return cTypeJsonTypeParserRuleCall_2_1_0; }

		//","?
		public Keyword getCommaKeyword_2_2() { return cCommaKeyword_2_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class JsonKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyLITERAL_STRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueJsonTypeParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//JsonKeyValuePair:
		//	key=LITERAL_STRING ":" value=JsonType;
		public ParserRule getRule() { return rule; }

		//key=LITERAL_STRING ":" value=JsonType
		public Group getGroup() { return cGroup; }

		//key=LITERAL_STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//LITERAL_STRING
		public RuleCall getKeyLITERAL_STRINGTerminalRuleCall_0_0() { return cKeyLITERAL_STRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=JsonType
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//JsonType
		public RuleCall getValueJsonTypeParserRuleCall_2_0() { return cValueJsonTypeParserRuleCall_2_0; }
	}

	public class JsonObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cKeyValuePairAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cKeyValuePairJsonKeyValuePairParserRuleCall_1_0_0 = (RuleCall)cKeyValuePairAssignment_1_0.eContents().get(0);
		private final Assignment cMetaKeyValuePairAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cMetaKeyValuePairJsonMetaKeyValuePairParserRuleCall_1_1_0 = (RuleCall)cMetaKeyValuePairAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Alternatives cAlternatives_2_1 = (Alternatives)cGroup_2.eContents().get(1);
		private final Assignment cKeyValuePairAssignment_2_1_0 = (Assignment)cAlternatives_2_1.eContents().get(0);
		private final RuleCall cKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0_0 = (RuleCall)cKeyValuePairAssignment_2_1_0.eContents().get(0);
		private final Assignment cMetaKeyValuePairAssignment_2_1_1 = (Assignment)cAlternatives_2_1.eContents().get(1);
		private final RuleCall cMetaKeyValuePairJsonMetaKeyValuePairParserRuleCall_2_1_1_0 = (RuleCall)cMetaKeyValuePairAssignment_2_1_1.eContents().get(0);
		private final Keyword cCommaKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// **
		// * A JsonObject could be an empty object
		// * / JsonObject:
		//	"{" (keyValuePair+=JsonKeyValuePair | metaKeyValuePair+=JsonMetaKeyValuePair)? ("," (keyValuePair+=JsonKeyValuePair |
		//	metaKeyValuePair+=JsonMetaKeyValuePair) ","?)* "}";
		public ParserRule getRule() { return rule; }

		//"{" (keyValuePair+=JsonKeyValuePair | metaKeyValuePair+=JsonMetaKeyValuePair)? ("," (keyValuePair+=JsonKeyValuePair |
		//metaKeyValuePair+=JsonMetaKeyValuePair) ","?)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//(keyValuePair+=JsonKeyValuePair | metaKeyValuePair+=JsonMetaKeyValuePair)?
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//keyValuePair+=JsonKeyValuePair
		public Assignment getKeyValuePairAssignment_1_0() { return cKeyValuePairAssignment_1_0; }

		//JsonKeyValuePair
		public RuleCall getKeyValuePairJsonKeyValuePairParserRuleCall_1_0_0() { return cKeyValuePairJsonKeyValuePairParserRuleCall_1_0_0; }

		//metaKeyValuePair+=JsonMetaKeyValuePair
		public Assignment getMetaKeyValuePairAssignment_1_1() { return cMetaKeyValuePairAssignment_1_1; }

		//JsonMetaKeyValuePair
		public RuleCall getMetaKeyValuePairJsonMetaKeyValuePairParserRuleCall_1_1_0() { return cMetaKeyValuePairJsonMetaKeyValuePairParserRuleCall_1_1_0; }

		//("," (keyValuePair+=JsonKeyValuePair | metaKeyValuePair+=JsonMetaKeyValuePair) ","?)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//keyValuePair+=JsonKeyValuePair | metaKeyValuePair+=JsonMetaKeyValuePair
		public Alternatives getAlternatives_2_1() { return cAlternatives_2_1; }

		//keyValuePair+=JsonKeyValuePair
		public Assignment getKeyValuePairAssignment_2_1_0() { return cKeyValuePairAssignment_2_1_0; }

		//JsonKeyValuePair
		public RuleCall getKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0_0() { return cKeyValuePairJsonKeyValuePairParserRuleCall_2_1_0_0; }

		//metaKeyValuePair+=JsonMetaKeyValuePair
		public Assignment getMetaKeyValuePairAssignment_2_1_1() { return cMetaKeyValuePairAssignment_2_1_1; }

		//JsonMetaKeyValuePair
		public RuleCall getMetaKeyValuePairJsonMetaKeyValuePairParserRuleCall_2_1_1_0() { return cMetaKeyValuePairJsonMetaKeyValuePairParserRuleCall_2_1_1_0; }

		//","?
		public Keyword getCommaKeyword_2_2() { return cCommaKeyword_2_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class JsonMetaArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetaTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMetaTypeJsonMetaTypeParserRuleCall_1_0 = (RuleCall)cMetaTypeAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//JsonMetaArray:
		//	"[" metaType=JsonMetaType "]";
		public ParserRule getRule() { return rule; }

		//"[" metaType=JsonMetaType "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//metaType=JsonMetaType
		public Assignment getMetaTypeAssignment_1() { return cMetaTypeAssignment_1; }

		//JsonMetaType
		public RuleCall getMetaTypeJsonMetaTypeParserRuleCall_1_0() { return cMetaTypeJsonMetaTypeParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class JsonMetaKeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JsonMetaKeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMetaKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMetaKeyLITERAL_STRINGTerminalRuleCall_0_0 = (RuleCall)cMetaKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMetaValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMetaValueJsonMetaTypeParserRuleCall_2_0 = (RuleCall)cMetaValueAssignment_2.eContents().get(0);
		
		//JsonMetaKeyValuePair:
		//	metaKey=LITERAL_STRING ":" metaValue=JsonMetaType;
		public ParserRule getRule() { return rule; }

		//metaKey=LITERAL_STRING ":" metaValue=JsonMetaType
		public Group getGroup() { return cGroup; }

		//metaKey=LITERAL_STRING
		public Assignment getMetaKeyAssignment_0() { return cMetaKeyAssignment_0; }

		//LITERAL_STRING
		public RuleCall getMetaKeyLITERAL_STRINGTerminalRuleCall_0_0() { return cMetaKeyLITERAL_STRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//metaValue=JsonMetaType
		public Assignment getMetaValueAssignment_2() { return cMetaValueAssignment_2; }

		//JsonMetaType
		public RuleCall getMetaValueJsonMetaTypeParserRuleCall_2_0() { return cMetaValueJsonMetaTypeParserRuleCall_2_0; }
	}
	
	
	private XplatformElements pXplatform;
	private XplatformJsonElements pXplatformJson;
	private XplatformHeaderElements pXplatformHeader;
	private XplatformHeaderKeyValueElements pXplatformHeaderKeyValue;
	private TerminalRule tXPLATFORM_HEADER_PARAMETER;
	private TerminalRule tRESTFUL_METHODS;
	private TerminalRule tJSON_LITERAL_NULL;
	private TerminalRule tJSON_LITERAL_NUMBER;
	private TerminalRule tJSON_LITERAL_BOOLEAN;
	private TerminalRule tLITERAL_STRING;
	private TerminalRule tSINGLE_QUOTED_STRING;
	private TerminalRule tDOUBLE_QUOTED_STRING;
	private JsonMetaTypeElements pJsonMetaType;
	private JsonTypeElements pJsonType;
	private JsonArrayElements pJsonArray;
	private JsonKeyValuePairElements pJsonKeyValuePair;
	private JsonObjectElements pJsonObject;
	private JsonMetaArrayElements pJsonMetaArray;
	private JsonMetaKeyValuePairElements pJsonMetaKeyValuePair;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public XplatformGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("nl.sison.Xplatform".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Xplatform:
	//	"call" callName=STRING method=RESTFUL_METHODS "from" (STRING? ("{" uriPathParams+=STRING "}")* STRING?)+ ("with"
	//	"headers" "from" "request" requestHeaders=XplatformHeader ("and" "response" responseHeaders=XplatformHeader)?)?
	//	("client" "expects" jsonToClient=XplatformJson ("server" "expects" jsonToServer=XplatformJson)?)?;
	public XplatformElements getXplatformAccess() {
		return (pXplatform != null) ? pXplatform : (pXplatform = new XplatformElements());
	}
	
	public ParserRule getXplatformRule() {
		return getXplatformAccess().getRule();
	}

	//XplatformJson:
	//	"\'\'\'" type=JsonType | metaType=JsonMetaType "\'\'\'";
	public XplatformJsonElements getXplatformJsonAccess() {
		return (pXplatformJson != null) ? pXplatformJson : (pXplatformJson = new XplatformJsonElements());
	}
	
	public ParserRule getXplatformJsonRule() {
		return getXplatformJsonAccess().getRule();
	}

	//// TODO refactor
	//XplatformHeader:
	//	"\'\'\'" "{" headerKeyValues+=XplatformHeaderKeyValue? ("," headerKeyValues+=XplatformHeaderKeyValue ","?)* "}"
	//	"\'\'\'";
	public XplatformHeaderElements getXplatformHeaderAccess() {
		return (pXplatformHeader != null) ? pXplatformHeader : (pXplatformHeader = new XplatformHeaderElements());
	}
	
	public ParserRule getXplatformHeaderRule() {
		return getXplatformHeaderAccess().getRule();
	}

	//XplatformHeaderKeyValue:
	//	key=LITERAL_STRING "=" (value=LITERAL_STRING | value=XPLATFORM_HEADER_PARAMETER);
	public XplatformHeaderKeyValueElements getXplatformHeaderKeyValueAccess() {
		return (pXplatformHeaderKeyValue != null) ? pXplatformHeaderKeyValue : (pXplatformHeaderKeyValue = new XplatformHeaderKeyValueElements());
	}
	
	public ParserRule getXplatformHeaderKeyValueRule() {
		return getXplatformHeaderKeyValueAccess().getRule();
	}

	//terminal XPLATFORM_HEADER_PARAMETER:
	//	"{" STRING "}";
	public TerminalRule getXPLATFORM_HEADER_PARAMETERRule() {
		return (tXPLATFORM_HEADER_PARAMETER != null) ? tXPLATFORM_HEADER_PARAMETER : (tXPLATFORM_HEADER_PARAMETER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XPLATFORM_HEADER_PARAMETER"));
	} 

	//terminal RESTFUL_METHODS:
	//	"PUT" | "POST" | "GET" | // TODO HEAD will be automagically generated as well
	//	"DELETE";
	public TerminalRule getRESTFUL_METHODSRule() {
		return (tRESTFUL_METHODS != null) ? tRESTFUL_METHODS : (tRESTFUL_METHODS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "RESTFUL_METHODS"));
	} 

	//terminal JSON_LITERAL_NULL:
	//	"null";
	public TerminalRule getJSON_LITERAL_NULLRule() {
		return (tJSON_LITERAL_NULL != null) ? tJSON_LITERAL_NULL : (tJSON_LITERAL_NULL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_NULL"));
	} 

	//// TODO exponent notation
	//terminal JSON_LITERAL_NUMBER:
	//	"0".."9"* ("." "0".."9"+)?;
	public TerminalRule getJSON_LITERAL_NUMBERRule() {
		return (tJSON_LITERAL_NUMBER != null) ? tJSON_LITERAL_NUMBER : (tJSON_LITERAL_NUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_NUMBER"));
	} 

	//terminal JSON_LITERAL_BOOLEAN:
	//	"true" | "false";
	public TerminalRule getJSON_LITERAL_BOOLEANRule() {
		return (tJSON_LITERAL_BOOLEAN != null) ? tJSON_LITERAL_BOOLEAN : (tJSON_LITERAL_BOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "JSON_LITERAL_BOOLEAN"));
	} 

	//terminal LITERAL_STRING:
	//	SINGLE_QUOTED_STRING | DOUBLE_QUOTED_STRING;
	public TerminalRule getLITERAL_STRINGRule() {
		return (tLITERAL_STRING != null) ? tLITERAL_STRING : (tLITERAL_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LITERAL_STRING"));
	} 

	//terminal SINGLE_QUOTED_STRING:
	//	"\'" STRING "\'";
	public TerminalRule getSINGLE_QUOTED_STRINGRule() {
		return (tSINGLE_QUOTED_STRING != null) ? tSINGLE_QUOTED_STRING : (tSINGLE_QUOTED_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SINGLE_QUOTED_STRING"));
	} 

	//terminal DOUBLE_QUOTED_STRING:
	//	"\"" STRING "\"";
	public TerminalRule getDOUBLE_QUOTED_STRINGRule() {
		return (tDOUBLE_QUOTED_STRING != null) ? tDOUBLE_QUOTED_STRING : (tDOUBLE_QUOTED_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOUBLE_QUOTED_STRING"));
	} 

	//JsonMetaType:
	//	"boolean" | "number" | "string" | JsonMetaArray;
	public JsonMetaTypeElements getJsonMetaTypeAccess() {
		return (pJsonMetaType != null) ? pJsonMetaType : (pJsonMetaType = new JsonMetaTypeElements());
	}
	
	public ParserRule getJsonMetaTypeRule() {
		return getJsonMetaTypeAccess().getRule();
	}

	//JsonType:
	//	JSON_LITERAL_BOOLEAN | LITERAL_STRING | JSON_LITERAL_NUMBER | JSON_LITERAL_NULL | JsonArray | JsonMetaType |
	//	JsonObject;
	public JsonTypeElements getJsonTypeAccess() {
		return (pJsonType != null) ? pJsonType : (pJsonType = new JsonTypeElements());
	}
	
	public ParserRule getJsonTypeRule() {
		return getJsonTypeAccess().getRule();
	}

	//JsonArray:
	//	"[" type+=JsonType? ("," type+=JsonType ","?)* "]";
	public JsonArrayElements getJsonArrayAccess() {
		return (pJsonArray != null) ? pJsonArray : (pJsonArray = new JsonArrayElements());
	}
	
	public ParserRule getJsonArrayRule() {
		return getJsonArrayAccess().getRule();
	}

	//JsonKeyValuePair:
	//	key=LITERAL_STRING ":" value=JsonType;
	public JsonKeyValuePairElements getJsonKeyValuePairAccess() {
		return (pJsonKeyValuePair != null) ? pJsonKeyValuePair : (pJsonKeyValuePair = new JsonKeyValuePairElements());
	}
	
	public ParserRule getJsonKeyValuePairRule() {
		return getJsonKeyValuePairAccess().getRule();
	}

	/// **
	// * A JsonObject could be an empty object
	// * / JsonObject:
	//	"{" (keyValuePair+=JsonKeyValuePair | metaKeyValuePair+=JsonMetaKeyValuePair)? ("," (keyValuePair+=JsonKeyValuePair |
	//	metaKeyValuePair+=JsonMetaKeyValuePair) ","?)* "}";
	public JsonObjectElements getJsonObjectAccess() {
		return (pJsonObject != null) ? pJsonObject : (pJsonObject = new JsonObjectElements());
	}
	
	public ParserRule getJsonObjectRule() {
		return getJsonObjectAccess().getRule();
	}

	//JsonMetaArray:
	//	"[" metaType=JsonMetaType "]";
	public JsonMetaArrayElements getJsonMetaArrayAccess() {
		return (pJsonMetaArray != null) ? pJsonMetaArray : (pJsonMetaArray = new JsonMetaArrayElements());
	}
	
	public ParserRule getJsonMetaArrayRule() {
		return getJsonMetaArrayAccess().getRule();
	}

	//JsonMetaKeyValuePair:
	//	metaKey=LITERAL_STRING ":" metaValue=JsonMetaType;
	public JsonMetaKeyValuePairElements getJsonMetaKeyValuePairAccess() {
		return (pJsonMetaKeyValuePair != null) ? pJsonMetaKeyValuePair : (pJsonMetaKeyValuePair = new JsonMetaKeyValuePairElements());
	}
	
	public ParserRule getJsonMetaKeyValuePairRule() {
		return getJsonMetaKeyValuePairAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
